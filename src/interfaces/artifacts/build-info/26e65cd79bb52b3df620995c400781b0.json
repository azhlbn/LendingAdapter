{
	"id": "26e65cd79bb52b3df620995c400781b0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/interfaces/DappsStaking.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\n\npragma solidity >=0.7.0;\n\n/// Interface to the precompiled contract on Shibuya/Shiden/Astar\n/// Predeployed at the address 0x0000000000000000000000000000000000005001\ninterface DappsStaking {\n\n    // Storage getters\n\n    /// @notice Read current era.\n    /// @return era, The current era\n    function read_current_era() external view returns (uint256);\n\n    /// @notice Read unbonding period constant.\n    /// @return period, The unbonding period in eras\n    function read_unbonding_period() external view returns (uint256);\n\n    /// @notice Read Total network reward for the given era\n    /// @return reward, Total network reward for the given era\n    function read_era_reward(uint32 era) external view returns (uint128);\n\n    /// @notice Read Total staked amount for the given era\n    /// @return staked, Total staked amount for the given era\n    function read_era_staked(uint32 era) external view returns (uint128);\n\n    /// @notice Read Staked amount for the staker\n    /// @param staker in form of 20 or 32 hex bytes\n    /// @return amount, Staked amount by the staker\n    function read_staked_amount(bytes calldata staker) external view returns (uint128);\n\n    /// @notice Read Staked amount on a given contract for the staker\n    /// @param contract_id contract evm address\n    /// @param staker in form of 20 or 32 hex bytes\n    /// @return amount, Staked amount by the staker\n    function read_staked_amount_on_contract(address contract_id, bytes calldata staker) external view returns (uint128);\n\n    /// @notice Read the staked amount from the era when the amount was last staked/unstaked\n    /// @return total, The most recent total staked amount on contract\n    function read_contract_stake(address contract_id) external view returns (uint128);\n\n\n    // Extrinsic calls\n\n    /// @notice Register provided contract.\n    function register(address) external;\n\n    /// @notice Stake provided amount on the contract.\n    function bond_and_stake(address, uint128) external payable;\n\n    /// @notice Start unbonding process and unstake balance from the contract.\n    function unbond_and_unstake(address, uint128) external;\n\n    /// @notice Withdraw all funds that have completed the unbonding process.\n    function withdraw_unbonded() external;\n\n    /// @notice Claim one era of unclaimed staker rewards for the specifeid contract.\n    ///         Staker account is derived from the caller address.\n    function claim_staker(address) external;\n\n    /// @notice Claim one era of unclaimed dapp rewards for the specified contract and era.\n    function claim_dapp(address, uint128) external;\n\n    /// Instruction how to handle reward payout for staker.\n    /// `FreeBalance` - Reward will be paid out to the staker (free balance).\n    /// `StakeBalance` - Reward will be paid out to the staker and is immediately restaked (locked balance)\n    enum RewardDestination {FreeBalance, StakeBalance}\n\n    /// @notice Set reward destination for staker rewards\n    /// @param reward_destination instruction on how the reward payout should be handled\n    function set_reward_destination(RewardDestination reward_destination) external;\n    \n    /// @notice Withdraw staked funds from an unregistered contract.\n    /// @param smart_contract smart contract address\n    function withdraw_from_unregistered(address smart_contract) external;\n\n    /// @notice Transfer part or entire nomination from origin smart contract to target smart contract\n    /// @param origin_smart_contract origin smart contract address\n    /// @param amount amount to transfer from origin to target\n    /// @param target_smart_contract target smart contract address\n    function nomination_transfer(address origin_smart_contract, uint128 amount, address target_smart_contract) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"src/interfaces/DappsStaking.sol": {
				"DappsStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"name": "bond_and_stake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"name": "claim_dapp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claim_staker",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "origin_smart_contract",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "target_smart_contract",
									"type": "address"
								}
							],
							"name": "nomination_transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contract_id",
									"type": "address"
								}
							],
							"name": "read_contract_stake",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "read_current_era",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "era",
									"type": "uint32"
								}
							],
							"name": "read_era_reward",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "era",
									"type": "uint32"
								}
							],
							"name": "read_era_staked",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "staker",
									"type": "bytes"
								}
							],
							"name": "read_staked_amount",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contract_id",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "staker",
									"type": "bytes"
								}
							],
							"name": "read_staked_amount_on_contract",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "read_unbonding_period",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum DappsStaking.RewardDestination",
									"name": "reward_destination",
									"type": "uint8"
								}
							],
							"name": "set_reward_destination",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"name": "unbond_and_unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "smart_contract",
									"type": "address"
								}
							],
							"name": "withdraw_from_unregistered",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw_unbonded",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"nomination_transfer(address,uint128,address)": {
								"params": {
									"amount": "amount to transfer from origin to target",
									"origin_smart_contract": "origin smart contract address",
									"target_smart_contract": "target smart contract address"
								}
							},
							"read_contract_stake(address)": {
								"returns": {
									"_0": "total, The most recent total staked amount on contract"
								}
							},
							"read_current_era()": {
								"returns": {
									"_0": "era, The current era"
								}
							},
							"read_era_reward(uint32)": {
								"returns": {
									"_0": "reward, Total network reward for the given era"
								}
							},
							"read_era_staked(uint32)": {
								"returns": {
									"_0": "staked, Total staked amount for the given era"
								}
							},
							"read_staked_amount(bytes)": {
								"params": {
									"staker": "in form of 20 or 32 hex bytes"
								},
								"returns": {
									"_0": "amount, Staked amount by the staker"
								}
							},
							"read_staked_amount_on_contract(address,bytes)": {
								"params": {
									"contract_id": "contract evm address",
									"staker": "in form of 20 or 32 hex bytes"
								},
								"returns": {
									"_0": "amount, Staked amount by the staker"
								}
							},
							"read_unbonding_period()": {
								"returns": {
									"_0": "period, The unbonding period in eras"
								}
							},
							"set_reward_destination(uint8)": {
								"params": {
									"reward_destination": "instruction on how the reward payout should be handled"
								}
							},
							"withdraw_from_unregistered(address)": {
								"params": {
									"smart_contract": "smart contract address"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"bond_and_stake(address,uint128)": "52b73e41",
							"claim_dapp(address,uint128)": "1b70ba65",
							"claim_staker(address)": "a0b9d8be",
							"nomination_transfer(address,uint128,address)": "2f2000cd",
							"read_contract_stake(address)": "539d5957",
							"read_current_era()": "e608d80b",
							"read_era_reward(uint32)": "d9424b16",
							"read_era_staked(uint32)": "18386693",
							"read_staked_amount(bytes)": "de0e8c64",
							"read_staked_amount_on_contract(address,bytes)": "dd33172d",
							"read_unbonding_period()": "db62b201",
							"register(address)": "4420e486",
							"set_reward_destination(uint8)": "4b1b0e86",
							"unbond_and_unstake(address,uint128)": "c7841dd2",
							"withdraw_from_unregistered(address)": "ba0ab99c",
							"withdraw_unbonded()": "77a0fe02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"bond_and_stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"claim_dapp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claim_staker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"origin_smart_contract\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"target_smart_contract\",\"type\":\"address\"}],\"name\":\"nomination_transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_id\",\"type\":\"address\"}],\"name\":\"read_contract_stake\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"read_current_era\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"era\",\"type\":\"uint32\"}],\"name\":\"read_era_reward\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"era\",\"type\":\"uint32\"}],\"name\":\"read_era_staked\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"staker\",\"type\":\"bytes\"}],\"name\":\"read_staked_amount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_id\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"staker\",\"type\":\"bytes\"}],\"name\":\"read_staked_amount_on_contract\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"read_unbonding_period\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DappsStaking.RewardDestination\",\"name\":\"reward_destination\",\"type\":\"uint8\"}],\"name\":\"set_reward_destination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"unbond_and_unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smart_contract\",\"type\":\"address\"}],\"name\":\"withdraw_from_unregistered\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw_unbonded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"nomination_transfer(address,uint128,address)\":{\"params\":{\"amount\":\"amount to transfer from origin to target\",\"origin_smart_contract\":\"origin smart contract address\",\"target_smart_contract\":\"target smart contract address\"}},\"read_contract_stake(address)\":{\"returns\":{\"_0\":\"total, The most recent total staked amount on contract\"}},\"read_current_era()\":{\"returns\":{\"_0\":\"era, The current era\"}},\"read_era_reward(uint32)\":{\"returns\":{\"_0\":\"reward, Total network reward for the given era\"}},\"read_era_staked(uint32)\":{\"returns\":{\"_0\":\"staked, Total staked amount for the given era\"}},\"read_staked_amount(bytes)\":{\"params\":{\"staker\":\"in form of 20 or 32 hex bytes\"},\"returns\":{\"_0\":\"amount, Staked amount by the staker\"}},\"read_staked_amount_on_contract(address,bytes)\":{\"params\":{\"contract_id\":\"contract evm address\",\"staker\":\"in form of 20 or 32 hex bytes\"},\"returns\":{\"_0\":\"amount, Staked amount by the staker\"}},\"read_unbonding_period()\":{\"returns\":{\"_0\":\"period, The unbonding period in eras\"}},\"set_reward_destination(uint8)\":{\"params\":{\"reward_destination\":\"instruction on how the reward payout should be handled\"}},\"withdraw_from_unregistered(address)\":{\"params\":{\"smart_contract\":\"smart contract address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bond_and_stake(address,uint128)\":{\"notice\":\"Stake provided amount on the contract.\"},\"claim_dapp(address,uint128)\":{\"notice\":\"Claim one era of unclaimed dapp rewards for the specified contract and era.\"},\"claim_staker(address)\":{\"notice\":\"Claim one era of unclaimed staker rewards for the specifeid contract.         Staker account is derived from the caller address.\"},\"nomination_transfer(address,uint128,address)\":{\"notice\":\"Transfer part or entire nomination from origin smart contract to target smart contract\"},\"read_contract_stake(address)\":{\"notice\":\"Read the staked amount from the era when the amount was last staked/unstaked\"},\"read_current_era()\":{\"notice\":\"Read current era.\"},\"read_era_reward(uint32)\":{\"notice\":\"Read Total network reward for the given era\"},\"read_era_staked(uint32)\":{\"notice\":\"Read Total staked amount for the given era\"},\"read_staked_amount(bytes)\":{\"notice\":\"Read Staked amount for the staker\"},\"read_staked_amount_on_contract(address,bytes)\":{\"notice\":\"Read Staked amount on a given contract for the staker\"},\"read_unbonding_period()\":{\"notice\":\"Read unbonding period constant.\"},\"register(address)\":{\"notice\":\"Register provided contract.\"},\"set_reward_destination(uint8)\":{\"notice\":\"Set reward destination for staker rewards\"},\"unbond_and_unstake(address,uint128)\":{\"notice\":\"Start unbonding process and unstake balance from the contract.\"},\"withdraw_from_unregistered(address)\":{\"notice\":\"Withdraw staked funds from an unregistered contract.\"},\"withdraw_unbonded()\":{\"notice\":\"Withdraw all funds that have completed the unbonding process.\"}},\"notice\":\"Interface to the precompiled contract on Shibuya/Shiden/Astar Predeployed at the address 0x0000000000000000000000000000000000005001\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/DappsStaking.sol\":\"DappsStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/DappsStaking.sol\":{\"keccak256\":\"0x347f502ad3b0b6af0e5a9aa4d635b677a2345ce8b23aed0d483b424307c7ca37\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://6ea37bca69d9f12f0076f012bab75779fafa1474cc801a53429940382159c0c0\",\"dweb:/ipfs/QmPGw5t5ksW2v6cLoLuficMzz2DSN274MtL2ugJqeiEwzT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"bond_and_stake(address,uint128)": {
								"notice": "Stake provided amount on the contract."
							},
							"claim_dapp(address,uint128)": {
								"notice": "Claim one era of unclaimed dapp rewards for the specified contract and era."
							},
							"claim_staker(address)": {
								"notice": "Claim one era of unclaimed staker rewards for the specifeid contract.         Staker account is derived from the caller address."
							},
							"nomination_transfer(address,uint128,address)": {
								"notice": "Transfer part or entire nomination from origin smart contract to target smart contract"
							},
							"read_contract_stake(address)": {
								"notice": "Read the staked amount from the era when the amount was last staked/unstaked"
							},
							"read_current_era()": {
								"notice": "Read current era."
							},
							"read_era_reward(uint32)": {
								"notice": "Read Total network reward for the given era"
							},
							"read_era_staked(uint32)": {
								"notice": "Read Total staked amount for the given era"
							},
							"read_staked_amount(bytes)": {
								"notice": "Read Staked amount for the staker"
							},
							"read_staked_amount_on_contract(address,bytes)": {
								"notice": "Read Staked amount on a given contract for the staker"
							},
							"read_unbonding_period()": {
								"notice": "Read unbonding period constant."
							},
							"register(address)": {
								"notice": "Register provided contract."
							},
							"set_reward_destination(uint8)": {
								"notice": "Set reward destination for staker rewards"
							},
							"unbond_and_unstake(address,uint128)": {
								"notice": "Start unbonding process and unstake balance from the contract."
							},
							"withdraw_from_unregistered(address)": {
								"notice": "Withdraw staked funds from an unregistered contract."
							},
							"withdraw_unbonded()": {
								"notice": "Withdraw all funds that have completed the unbonding process."
							}
						},
						"notice": "Interface to the precompiled contract on Shibuya/Shiden/Astar Predeployed at the address 0x0000000000000000000000000000000000005001",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/interfaces/DappsStaking.sol": {
				"ast": {
					"absolutePath": "src/interfaces/DappsStaking.sol",
					"exportedSymbols": {
						"DappsStaking": [
							123
						]
					},
					"id": 124,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "68:140:0",
								"text": "Interface to the precompiled contract on Shibuya/Shiden/Astar\n Predeployed at the address 0x0000000000000000000000000000000000005001"
							},
							"fullyImplemented": false,
							"id": 123,
							"linearizedBaseContracts": [
								123
							],
							"name": "DappsStaking",
							"nameLocation": "218:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "262:66:0",
										"text": "@notice Read current era.\n @return era, The current era"
									},
									"functionSelector": "e608d80b",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_current_era",
									"nameLocation": "342:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "384:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:9:0"
									},
									"scope": 123,
									"src": "333:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "399:96:0",
										"text": "@notice Read unbonding period constant.\n @return period, The unbonding period in eras"
									},
									"functionSelector": "db62b201",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_unbonding_period",
									"nameLocation": "509:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "530:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "556:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:9:0"
									},
									"scope": 123,
									"src": "500:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "571:118:0",
										"text": "@notice Read Total network reward for the given era\n @return reward, Total network reward for the given era"
									},
									"functionSelector": "d9424b16",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_era_reward",
									"nameLocation": "703:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "era",
												"nameLocation": "726:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "719:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 16,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "719:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "718:12:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "754:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 19,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "753:9:0"
									},
									"scope": 123,
									"src": "694:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "769:116:0",
										"text": "@notice Read Total staked amount for the given era\n @return staked, Total staked amount for the given era"
									},
									"functionSelector": "18386693",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_era_staked",
									"nameLocation": "899:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "era",
												"nameLocation": "922:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "915:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 24,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "915:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:12:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "950:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 27,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:9:0"
									},
									"scope": 123,
									"src": "890:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "965:149:0",
										"text": "@notice Read Staked amount for the staker\n @param staker in form of 20 or 32 hex bytes\n @return amount, Staked amount by the staker"
									},
									"functionSelector": "de0e8c64",
									"id": 38,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_staked_amount",
									"nameLocation": "1128:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1162:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "1147:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 32,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1147:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:23:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "1193:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 35,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1192:9:0"
									},
									"scope": 123,
									"src": "1119:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1208:217:0",
										"text": "@notice Read Staked amount on a given contract for the staker\n @param contract_id contract evm address\n @param staker in form of 20 or 32 hex bytes\n @return amount, Staked amount by the staker"
									},
									"functionSelector": "dd33172d",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_staked_amount_on_contract",
									"nameLocation": "1439:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "contract_id",
												"nameLocation": "1478:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1470:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1506:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1491:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 42,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1491:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1469:44:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1537:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 45,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:9:0"
									},
									"scope": 123,
									"src": "1430:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1552:159:0",
										"text": "@notice Read the staked amount from the era when the amount was last staked/unstaked\n @return total, The most recent total staked amount on contract"
									},
									"functionSelector": "539d5957",
									"id": 56,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_contract_stake",
									"nameLocation": "1725:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "contract_id",
												"nameLocation": "1753:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1745:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:21:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1789:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 53,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1788:9:0"
									},
									"scope": 123,
									"src": "1716:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "1829:39:0",
										"text": "@notice Register provided contract."
									},
									"functionSelector": "4420e486",
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nameLocation": "1882:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1891:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1890:9:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1908:0:0"
									},
									"scope": 123,
									"src": "1873:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1915:50:0",
										"text": "@notice Stake provided amount on the contract."
									},
									"functionSelector": "52b73e41",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bond_and_stake",
									"nameLocation": "1979:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1994:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2003:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 66,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:18:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:0:0"
									},
									"scope": 123,
									"src": "1970:59:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2035:74:0",
										"text": "@notice Start unbonding process and unstake balance from the contract."
									},
									"functionSelector": "c7841dd2",
									"id": 78,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbond_and_unstake",
									"nameLocation": "2123:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "2142:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "2151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 74,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2141:18:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2168:0:0"
									},
									"scope": 123,
									"src": "2114:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "2175:73:0",
										"text": "@notice Withdraw all funds that have completed the unbonding process."
									},
									"functionSelector": "77a0fe02",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw_unbonded",
									"nameLocation": "2262:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2279:2:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2290:0:0"
									},
									"scope": 123,
									"src": "2253:38:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2297:148:0",
										"text": "@notice Claim one era of unclaimed staker rewards for the specifeid contract.\n         Staker account is derived from the caller address."
									},
									"functionSelector": "a0b9d8be",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim_staker",
									"nameLocation": "2459:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "2472:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2471:9:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 123,
									"src": "2450:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2496:87:0",
										"text": "@notice Claim one era of unclaimed dapp rewards for the specified contract and era."
									},
									"functionSelector": "1b70ba65",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim_dapp",
									"nameLocation": "2597:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2608:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2617:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 92,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2607:18:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:0"
									},
									"scope": 123,
									"src": "2588:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "DappsStaking.RewardDestination",
									"id": 99,
									"members": [
										{
											"id": 97,
											"name": "FreeBalance",
											"nameLocation": "2911:11:0",
											"nodeType": "EnumValue",
											"src": "2911:11:0"
										},
										{
											"id": 98,
											"name": "StakeBalance",
											"nameLocation": "2924:12:0",
											"nodeType": "EnumValue",
											"src": "2924:12:0"
										}
									],
									"name": "RewardDestination",
									"nameLocation": "2892:17:0",
									"nodeType": "EnumDefinition",
									"src": "2887:50:0"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "2943:142:0",
										"text": "@notice Set reward destination for staker rewards\n @param reward_destination instruction on how the reward payout should be handled"
									},
									"functionSelector": "4b1b0e86",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "set_reward_destination",
									"nameLocation": "3099:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "reward_destination",
												"nameLocation": "3140:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3122:36:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RewardDestination_$99",
													"typeString": "enum DappsStaking.RewardDestination"
												},
												"typeName": {
													"id": 102,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 101,
														"name": "RewardDestination",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 99,
														"src": "3122:17:0"
													},
													"referencedDeclaration": 99,
													"src": "3122:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RewardDestination_$99",
														"typeString": "enum DappsStaking.RewardDestination"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3121:38:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3168:0:0"
									},
									"scope": 123,
									"src": "3090:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3179:117:0",
										"text": "@notice Withdraw staked funds from an unregistered contract.\n @param smart_contract smart contract address"
									},
									"functionSelector": "ba0ab99c",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw_from_unregistered",
									"nameLocation": "3310:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "smart_contract",
												"nameLocation": "3345:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3337:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3336:24:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3369:0:0"
									},
									"scope": 123,
									"src": "3301:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "3376:295:0",
										"text": "@notice Transfer part or entire nomination from origin smart contract to target smart contract\n @param origin_smart_contract origin smart contract address\n @param amount amount to transfer from origin to target\n @param target_smart_contract target smart contract address"
									},
									"functionSelector": "2f2000cd",
									"id": 122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nomination_transfer",
									"nameLocation": "3685:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "origin_smart_contract",
												"nameLocation": "3713:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "3705:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3744:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "3736:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 116,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "target_smart_contract",
												"nameLocation": "3760:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "3752:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3704:78:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 123,
									"src": "3676:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 124,
							"src": "208:3586:0",
							"usedErrors": []
						}
					],
					"src": "42:3753:0"
				},
				"id": 0
			}
		}
	}
}