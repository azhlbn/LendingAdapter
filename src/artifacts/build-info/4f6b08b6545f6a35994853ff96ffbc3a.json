{
	"id": "4f6b08b6545f6a35994853ff96ffbc3a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/DappsStakingMock.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./interfaces/DappsStaking.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract DappsStakingMock is Ownable {\n    uint256 public era = 100;\n    uint256 public start;\n    uint256 public eraDuration = 60;\n    uint256 public unstakesSum;\n    uint256 public stakerRewards;\n\n    struct Unstake {\n        uint128 amount;\n        uint128 startEra;\n    }\n\n    Unstake[] public unstakes;\n\n    constructor() {\n        start = block.timestamp;\n    }\n\n    /// @notice Stake provided amount on the contract.\n    function bond_and_stake(address, uint128) external payable {}\n\n    /// @notice Start unbonding process and unstake balance from the contract.\n    function unbond_and_unstake(address, uint128 amount) external {\n        unstakesSum += amount;\n        if (unstakesSum <= address(this).balance) {\n            unstakes.push(Unstake(amount, uint128(read_current_era())));\n            stakerRewards += 1;\n        }\n    }\n\n    /// @notice Withdraw all funds that have completed the unbonding process.\n    function withdraw_unbonded() external {\n        for (uint256 i; i < unstakes.length; i++) {\n            if (block.timestamp - unstakes[i].startEra >= 10 && unstakes[i].amount > 0) {\n                payable(msg.sender).transfer(unstakes[i].amount);\n                unstakesSum -= unstakes[i].amount;\n                unstakes[i].amount = 0;\n            }\n        }\n    }\n\n    /// @notice Claim one era of unclaimed staker rewards for the specifeid contract.\n    ///         Staker account is derived from the caller address.\n    function claim_staker(address) external onlyOwner {\n        payable(msg.sender).transfer(stakerRewards);\n        stakerRewards = 0;\n    }\n\n    /// @notice Read current era.\n    /// @return era, The current era\n    function read_current_era() public view returns (uint256) {\n        return era + (block.timestamp - start) / eraDuration; // era changed every minute\n    }\n\n    /// @notice Read unbonding period constant.\n    /// @return period, The unbonding period in eras\n    function read_unbonding_period() external view returns (uint256) {\n        return 10;\n    }\n\n    function setEraDuration(uint256 _duration) public {\n        eraDuration = _duration;\n    }\n\n    receive() external payable {}\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"src/interfaces/DappsStaking.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\n\npragma solidity >=0.7.0;\n\n/// Interface to the precompiled contract on Shibuya/Shiden/Astar\n/// Predeployed at the address 0x0000000000000000000000000000000000005001\ninterface DappsStaking {\n\n    // Storage getters\n\n    /// @notice Read current era.\n    /// @return era, The current era\n    function read_current_era() external view returns (uint256);\n\n    /// @notice Read unbonding period constant.\n    /// @return period, The unbonding period in eras\n    function read_unbonding_period() external view returns (uint256);\n\n    /// @notice Read Total network reward for the given era\n    /// @return reward, Total network reward for the given era\n    function read_era_reward(uint32 era) external view returns (uint128);\n\n    /// @notice Read Total staked amount for the given era\n    /// @return staked, Total staked amount for the given era\n    function read_era_staked(uint32 era) external view returns (uint128);\n\n    /// @notice Read Staked amount for the staker\n    /// @param staker in form of 20 or 32 hex bytes\n    /// @return amount, Staked amount by the staker\n    function read_staked_amount(bytes calldata staker) external view returns (uint128);\n\n    /// @notice Read Staked amount on a given contract for the staker\n    /// @param contract_id contract evm address\n    /// @param staker in form of 20 or 32 hex bytes\n    /// @return amount, Staked amount by the staker\n    function read_staked_amount_on_contract(address contract_id, bytes calldata staker) external view returns (uint128);\n\n    /// @notice Read the staked amount from the era when the amount was last staked/unstaked\n    /// @return total, The most recent total staked amount on contract\n    function read_contract_stake(address contract_id) external view returns (uint128);\n\n\n    // Extrinsic calls\n\n    /// @notice Register provided contract.\n    function register(address) external;\n\n    /// @notice Stake provided amount on the contract.\n    function bond_and_stake(address, uint128) external payable;\n\n    /// @notice Start unbonding process and unstake balance from the contract.\n    function unbond_and_unstake(address, uint128) external;\n\n    /// @notice Withdraw all funds that have completed the unbonding process.\n    function withdraw_unbonded() external;\n\n    /// @notice Claim one era of unclaimed staker rewards for the specifeid contract.\n    ///         Staker account is derived from the caller address.\n    function claim_staker(address) external;\n\n    /// @notice Claim one era of unclaimed dapp rewards for the specified contract and era.\n    function claim_dapp(address, uint128) external;\n\n    /// Instruction how to handle reward payout for staker.\n    /// `FreeBalance` - Reward will be paid out to the staker (free balance).\n    /// `StakeBalance` - Reward will be paid out to the staker and is immediately restaked (locked balance)\n    enum RewardDestination {FreeBalance, StakeBalance}\n\n    /// @notice Set reward destination for staker rewards\n    /// @param reward_destination instruction on how the reward payout should be handled\n    function set_reward_destination(RewardDestination reward_destination) external;\n    \n    /// @notice Withdraw staked funds from an unregistered contract.\n    /// @param smart_contract smart contract address\n    function withdraw_from_unregistered(address smart_contract) external;\n\n    /// @notice Transfer part or entire nomination from origin smart contract to target smart contract\n    /// @param origin_smart_contract origin smart contract address\n    /// @param amount amount to transfer from origin to target\n    /// @param target_smart_contract target smart contract address\n    function nomination_transfer(address origin_smart_contract, uint128 amount, address target_smart_contract) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/DappsStakingMock.sol": {
				"DappsStakingMock": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"name": "bond_and_stake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claim_staker",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "era",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eraDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "read_current_era",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "read_unbonding_period",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "setEraDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakerRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "unbond_and_unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "unstakes",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "startEra",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakesSum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw_unbonded",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"read_current_era()": {
								"returns": {
									"_0": "era, The current era"
								}
							},
							"read_unbonding_period()": {
								"returns": {
									"_0": "period, The unbonding period in eras"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/DappsStakingMock.sol\":149:2301  contract DappsStakingMock is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"src/DappsStakingMock.sol\":213:216  100 */\n  0x64\n    /* \"src/DappsStakingMock.sol\":192:216  uint256 public era = 100 */\n  0x01\n  sstore\n    /* \"src/DappsStakingMock.sol\":277:279  60 */\n  0x3c\n    /* \"src/DappsStakingMock.sol\":248:279  uint256 public eraDuration = 60 */\n  0x03\n  sstore\n    /* \"src/DappsStakingMock.sol\":462:516  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"src/DappsStakingMock.sol\":494:509  block.timestamp */\n  timestamp\n    /* \"src/DappsStakingMock.sol\":486:491  start */\n  0x02\n    /* \"src/DappsStakingMock.sol\":486:509  start = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/DappsStakingMock.sol\":149:2301  contract DappsStakingMock is Ownable {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"src/DappsStakingMock.sol\":149:2301  contract DappsStakingMock is Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/DappsStakingMock.sol\":149:2301  contract DappsStakingMock is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa0b9d8be\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd97c94ac\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xd97c94ac\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdb62b201\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe608d80b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0xa0b9d8be\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc7841dd2\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xcfb9cfba\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x77441b70\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x77a0fe02\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x27d970\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x143e55e0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4455a38f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x52b73e41\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/DappsStakingMock.sol\":285:311  uint256 public unstakesSum */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DappsStakingMock.sol\":192:216  uint256 public era = 100 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DappsStakingMock.sol\":248:279  uint256 public eraDuration = 60 */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DappsStakingMock.sol\":577:638  function bond_and_stake(address, uint128) external payable {} */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      stop\n        /* \"src/DappsStakingMock.sol\":430:455  Unstake[] public unstakes */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap3\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DappsStakingMock.sol\":1074:1442  function withdraw_unbonded() external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DappsStakingMock.sol\":1601:1738  function claim_staker(address) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"src/DappsStakingMock.sol\":222:242  uint256 public start */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DappsStakingMock.sol\":723:990  function unbond_and_unstake(address, uint128 amount) external {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"src/DappsStakingMock.sol\":317:345  uint256 public stakerRewards */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DappsStakingMock.sol\":2174:2264  function setEraDuration(uint256 _duration) public {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"src/DappsStakingMock.sol\":2077:2168  function read_unbonding_period() external view returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DappsStakingMock.sol\":1815:1970  function read_current_era() public view returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"src/DappsStakingMock.sol\":285:311  uint256 public unstakesSum */\n    tag_26:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"src/DappsStakingMock.sol\":192:216  uint256 public era = 100 */\n    tag_31:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"src/DappsStakingMock.sol\":248:279  uint256 public eraDuration = 60 */\n    tag_35:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"src/DappsStakingMock.sol\":577:638  function bond_and_stake(address, uint128) external payable {} */\n    tag_40:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"src/DappsStakingMock.sol\":430:455  Unstake[] public unstakes */\n    tag_48:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"src/DappsStakingMock.sol\":1074:1442  function withdraw_unbonded() external {... */\n    tag_53:\n        /* \"src/DappsStakingMock.sol\":1127:1136  uint256 i */\n      0x00\n        /* \"src/DappsStakingMock.sol\":1122:1436  for (uint256 i; i < unstakes.length; i++) {... */\n    tag_102:\n        /* \"src/DappsStakingMock.sol\":1142:1150  unstakes */\n      0x06\n        /* \"src/DappsStakingMock.sol\":1142:1157  unstakes.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/DappsStakingMock.sol\":1138:1139  i */\n      dup2\n        /* \"src/DappsStakingMock.sol\":1138:1157  i < unstakes.length */\n      lt\n        /* \"src/DappsStakingMock.sol\":1122:1436  for (uint256 i; i < unstakes.length; i++) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"src/DappsStakingMock.sol\":1224:1226  10 */\n      0x0a\n        /* \"src/DappsStakingMock.sol\":1200:1208  unstakes */\n      0x06\n        /* \"src/DappsStakingMock.sol\":1209:1210  i */\n      dup3\n        /* \"src/DappsStakingMock.sol\":1200:1211  unstakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_105\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_105:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"src/DappsStakingMock.sol\":1200:1220  unstakes[i].startEra */\n      0x00\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DappsStakingMock.sol\":1182:1220  block.timestamp - unstakes[i].startEra */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DappsStakingMock.sol\":1182:1197  block.timestamp */\n      timestamp\n        /* \"src/DappsStakingMock.sol\":1182:1220  block.timestamp - unstakes[i].startEra */\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"src/DappsStakingMock.sol\":1182:1226  block.timestamp - unstakes[i].startEra >= 10 */\n      lt\n      iszero\n        /* \"src/DappsStakingMock.sol\":1182:1252  block.timestamp - unstakes[i].startEra >= 10 && unstakes[i].amount > 0 */\n      dup1\n      iszero\n      tag_109\n      jumpi\n      pop\n        /* \"src/DappsStakingMock.sol\":1251:1252  0 */\n      0x00\n        /* \"src/DappsStakingMock.sol\":1230:1238  unstakes */\n      0x06\n        /* \"src/DappsStakingMock.sol\":1239:1240  i */\n      dup3\n        /* \"src/DappsStakingMock.sol\":1230:1241  unstakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_110\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_110:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"src/DappsStakingMock.sol\":1230:1248  unstakes[i].amount */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DappsStakingMock.sol\":1230:1252  unstakes[i].amount > 0 */\n      0xffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"src/DappsStakingMock.sol\":1182:1252  block.timestamp - unstakes[i].startEra >= 10 && unstakes[i].amount > 0 */\n    tag_109:\n        /* \"src/DappsStakingMock.sol\":1178:1426  if (block.timestamp - unstakes[i].startEra >= 10 && unstakes[i].amount > 0) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"src/DappsStakingMock.sol\":1280:1290  msg.sender */\n      caller\n        /* \"src/DappsStakingMock.sol\":1272:1300  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DappsStakingMock.sol\":1272:1320  payable(msg.sender).transfer(unstakes[i].amount) */\n      0x08fc\n        /* \"src/DappsStakingMock.sol\":1301:1309  unstakes */\n      0x06\n        /* \"src/DappsStakingMock.sol\":1310:1311  i */\n      dup4\n        /* \"src/DappsStakingMock.sol\":1301:1312  unstakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_113\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_113:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"src/DappsStakingMock.sol\":1301:1319  unstakes[i].amount */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DappsStakingMock.sol\":1272:1320  payable(msg.sender).transfer(unstakes[i].amount) */\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n        /* \"src/DappsStakingMock.sol\":1353:1361  unstakes */\n      0x06\n        /* \"src/DappsStakingMock.sol\":1362:1363  i */\n      dup2\n        /* \"src/DappsStakingMock.sol\":1353:1364  unstakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_117\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_117:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"src/DappsStakingMock.sol\":1353:1371  unstakes[i].amount */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DappsStakingMock.sol\":1338:1371  unstakesSum -= unstakes[i].amount */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DappsStakingMock.sol\":1338:1349  unstakesSum */\n      0x04\n      0x00\n        /* \"src/DappsStakingMock.sol\":1338:1371  unstakesSum -= unstakes[i].amount */\n      dup3\n      dup3\n      sload\n      tag_119\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_119:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DappsStakingMock.sol\":1410:1411  0 */\n      0x00\n        /* \"src/DappsStakingMock.sol\":1389:1397  unstakes */\n      0x06\n        /* \"src/DappsStakingMock.sol\":1398:1399  i */\n      dup3\n        /* \"src/DappsStakingMock.sol\":1389:1400  unstakes[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_120\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_120:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"src/DappsStakingMock.sol\":1389:1407  unstakes[i].amount */\n      0x00\n      add\n      0x00\n        /* \"src/DappsStakingMock.sol\":1389:1411  unstakes[i].amount = 0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/DappsStakingMock.sol\":1178:1426  if (block.timestamp - unstakes[i].startEra >= 10 && unstakes[i].amount > 0) {... */\n    tag_112:\n        /* \"src/DappsStakingMock.sol\":1159:1162  i++ */\n      dup1\n      dup1\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      swap2\n      pop\n      pop\n        /* \"src/DappsStakingMock.sol\":1122:1436  for (uint256 i; i < unstakes.length; i++) {... */\n      jump(tag_102)\n    tag_103:\n      pop\n        /* \"src/DappsStakingMock.sol\":1074:1442  function withdraw_unbonded() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/DappsStakingMock.sol\":1601:1738  function claim_staker(address) external onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_126:\n        /* \"src/DappsStakingMock.sol\":1669:1679  msg.sender */\n      caller\n        /* \"src/DappsStakingMock.sol\":1661:1689  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DappsStakingMock.sol\":1661:1704  payable(msg.sender).transfer(stakerRewards) */\n      0x08fc\n        /* \"src/DappsStakingMock.sol\":1690:1703  stakerRewards */\n      sload(0x05)\n        /* \"src/DappsStakingMock.sol\":1661:1704  payable(msg.sender).transfer(stakerRewards) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n        /* \"src/DappsStakingMock.sol\":1730:1731  0 */\n      0x00\n        /* \"src/DappsStakingMock.sol\":1714:1727  stakerRewards */\n      0x05\n        /* \"src/DappsStakingMock.sol\":1714:1731  stakerRewards = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DappsStakingMock.sol\":1601:1738  function claim_staker(address) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/DappsStakingMock.sol\":222:242  uint256 public start */\n    tag_66:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"src/DappsStakingMock.sol\":723:990  function unbond_and_unstake(address, uint128 amount) external {... */\n    tag_71:\n        /* \"src/DappsStakingMock.sol\":810:816  amount */\n      dup1\n        /* \"src/DappsStakingMock.sol\":795:816  unstakesSum += amount */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DappsStakingMock.sol\":795:806  unstakesSum */\n      0x04\n      0x00\n        /* \"src/DappsStakingMock.sol\":795:816  unstakesSum += amount */\n      dup3\n      dup3\n      sload\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DappsStakingMock.sol\":845:866  address(this).balance */\n      selfbalance\n        /* \"src/DappsStakingMock.sol\":830:841  unstakesSum */\n      sload(0x04)\n        /* \"src/DappsStakingMock.sol\":830:866  unstakesSum <= address(this).balance */\n      gt\n        /* \"src/DappsStakingMock.sol\":826:984  if (unstakesSum <= address(this).balance) {... */\n      tag_133\n      jumpi\n        /* \"src/DappsStakingMock.sol\":882:890  unstakes */\n      0x06\n        /* \"src/DappsStakingMock.sol\":896:940  Unstake(amount, uint128(read_current_era())) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"src/DappsStakingMock.sol\":904:910  amount */\n      dup4\n        /* \"src/DappsStakingMock.sol\":896:940  Unstake(amount, uint128(read_current_era())) */\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/DappsStakingMock.sol\":920:938  read_current_era() */\n      tag_134\n        /* \"src/DappsStakingMock.sol\":920:936  read_current_era */\n      tag_86\n        /* \"src/DappsStakingMock.sol\":920:938  read_current_era() */\n      jump\t// in\n    tag_134:\n        /* \"src/DappsStakingMock.sol\":896:940  Unstake(amount, uint128(read_current_era())) */\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"src/DappsStakingMock.sol\":882:941  unstakes.push(Unstake(amount, uint128(read_current_era()))) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x10)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"src/DappsStakingMock.sol\":972:973  1 */\n      0x01\n        /* \"src/DappsStakingMock.sol\":955:968  stakerRewards */\n      0x05\n      0x00\n        /* \"src/DappsStakingMock.sol\":955:973  stakerRewards += 1 */\n      dup3\n      dup3\n      sload\n      tag_136\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_136:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DappsStakingMock.sol\":826:984  if (unstakesSum <= address(this).balance) {... */\n    tag_133:\n        /* \"src/DappsStakingMock.sol\":723:990  function unbond_and_unstake(address, uint128 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/DappsStakingMock.sol\":317:345  uint256 public stakerRewards */\n    tag_74:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"src/DappsStakingMock.sol\":2174:2264  function setEraDuration(uint256 _duration) public {... */\n    tag_79:\n        /* \"src/DappsStakingMock.sol\":2248:2257  _duration */\n      dup1\n        /* \"src/DappsStakingMock.sol\":2234:2245  eraDuration */\n      0x03\n        /* \"src/DappsStakingMock.sol\":2234:2257  eraDuration = _duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DappsStakingMock.sol\":2174:2264  function setEraDuration(uint256 _duration) public {... */\n      pop\n      jump\t// out\n        /* \"src/DappsStakingMock.sol\":2077:2168  function read_unbonding_period() external view returns (uint256) {... */\n    tag_82:\n        /* \"src/DappsStakingMock.sol\":2133:2140  uint256 */\n      0x00\n        /* \"src/DappsStakingMock.sol\":2159:2161  10 */\n      0x0a\n        /* \"src/DappsStakingMock.sol\":2152:2161  return 10 */\n      swap1\n      pop\n        /* \"src/DappsStakingMock.sol\":2077:2168  function read_unbonding_period() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/DappsStakingMock.sol\":1815:1970  function read_current_era() public view returns (uint256) {... */\n    tag_86:\n        /* \"src/DappsStakingMock.sol\":1864:1871  uint256 */\n      0x00\n        /* \"src/DappsStakingMock.sol\":1924:1935  eraDuration */\n      sload(0x03)\n        /* \"src/DappsStakingMock.sol\":1915:1920  start */\n      sload(0x02)\n        /* \"src/DappsStakingMock.sol\":1897:1912  block.timestamp */\n      timestamp\n        /* \"src/DappsStakingMock.sol\":1897:1920  block.timestamp - start */\n      tag_140\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_140:\n        /* \"src/DappsStakingMock.sol\":1896:1935  (block.timestamp - start) / eraDuration */\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"src/DappsStakingMock.sol\":1890:1893  era */\n      sload(0x01)\n        /* \"src/DappsStakingMock.sol\":1890:1935  era + (block.timestamp - start) / eraDuration */\n      tag_143\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_143:\n        /* \"src/DappsStakingMock.sol\":1883:1935  return era + (block.timestamp - start) / eraDuration */\n      swap1\n      pop\n        /* \"src/DappsStakingMock.sol\":1815:1970  function read_current_era() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_161:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_163\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_165:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_167\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:436   */\n    tag_169:\n        /* \"#utility.yul\":343:348   */\n      0x00\n        /* \"#utility.yul\":381:387   */\n      dup2\n        /* \"#utility.yul\":368:388   */\n      calldataload\n        /* \"#utility.yul\":359:388   */\n      swap1\n      pop\n        /* \"#utility.yul\":397:430   */\n      tag_171\n        /* \"#utility.yul\":424:429   */\n      dup2\n        /* \"#utility.yul\":397:430   */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":349:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:704   */\n    tag_62:\n        /* \"#utility.yul\":501:507   */\n      0x00\n        /* \"#utility.yul\":550:552   */\n      0x20\n        /* \"#utility.yul\":538:547   */\n      dup3\n        /* \"#utility.yul\":529:536   */\n      dup5\n        /* \"#utility.yul\":525:548   */\n      sub\n        /* \"#utility.yul\":521:553   */\n      slt\n        /* \"#utility.yul\":518:520   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":518:520   */\n    tag_174:\n        /* \"#utility.yul\":609:610   */\n      0x00\n        /* \"#utility.yul\":634:687   */\n      tag_175\n        /* \"#utility.yul\":679:686   */\n      dup5\n        /* \"#utility.yul\":670:676   */\n      dup3\n        /* \"#utility.yul\":659:668   */\n      dup6\n        /* \"#utility.yul\":655:677   */\n      add\n        /* \"#utility.yul\":634:687   */\n      tag_161\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":624:687   */\n      swap2\n      pop\n        /* \"#utility.yul\":580:697   */\n      pop\n        /* \"#utility.yul\":508:704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":710:1117   */\n    tag_39:\n        /* \"#utility.yul\":778:784   */\n      0x00\n        /* \"#utility.yul\":786:792   */\n      dup1\n        /* \"#utility.yul\":835:837   */\n      0x40\n        /* \"#utility.yul\":823:832   */\n      dup4\n        /* \"#utility.yul\":814:821   */\n      dup6\n        /* \"#utility.yul\":810:833   */\n      sub\n        /* \"#utility.yul\":806:838   */\n      slt\n        /* \"#utility.yul\":803:805   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":851:852   */\n      0x00\n        /* \"#utility.yul\":848:849   */\n      dup1\n        /* \"#utility.yul\":841:853   */\n      revert\n        /* \"#utility.yul\":803:805   */\n    tag_177:\n        /* \"#utility.yul\":894:895   */\n      0x00\n        /* \"#utility.yul\":919:972   */\n      tag_178\n        /* \"#utility.yul\":964:971   */\n      dup6\n        /* \"#utility.yul\":955:961   */\n      dup3\n        /* \"#utility.yul\":944:953   */\n      dup7\n        /* \"#utility.yul\":940:962   */\n      add\n        /* \"#utility.yul\":919:972   */\n      tag_161\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":909:972   */\n      swap3\n      pop\n        /* \"#utility.yul\":865:982   */\n      pop\n        /* \"#utility.yul\":1021:1023   */\n      0x20\n        /* \"#utility.yul\":1047:1100   */\n      tag_179\n        /* \"#utility.yul\":1092:1099   */\n      dup6\n        /* \"#utility.yul\":1083:1089   */\n      dup3\n        /* \"#utility.yul\":1072:1081   */\n      dup7\n        /* \"#utility.yul\":1068:1090   */\n      add\n        /* \"#utility.yul\":1047:1100   */\n      tag_165\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1037:1100   */\n      swap2\n      pop\n        /* \"#utility.yul\":992:1110   */\n      pop\n        /* \"#utility.yul\":793:1117   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1385   */\n    tag_47:\n        /* \"#utility.yul\":1182:1188   */\n      0x00\n        /* \"#utility.yul\":1231:1233   */\n      0x20\n        /* \"#utility.yul\":1219:1228   */\n      dup3\n        /* \"#utility.yul\":1210:1217   */\n      dup5\n        /* \"#utility.yul\":1206:1229   */\n      sub\n        /* \"#utility.yul\":1202:1234   */\n      slt\n        /* \"#utility.yul\":1199:1201   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":1247:1248   */\n      0x00\n        /* \"#utility.yul\":1244:1245   */\n      dup1\n        /* \"#utility.yul\":1237:1249   */\n      revert\n        /* \"#utility.yul\":1199:1201   */\n    tag_181:\n        /* \"#utility.yul\":1290:1291   */\n      0x00\n        /* \"#utility.yul\":1315:1368   */\n      tag_182\n        /* \"#utility.yul\":1360:1367   */\n      dup5\n        /* \"#utility.yul\":1351:1357   */\n      dup3\n        /* \"#utility.yul\":1340:1349   */\n      dup6\n        /* \"#utility.yul\":1336:1358   */\n      add\n        /* \"#utility.yul\":1315:1368   */\n      tag_169\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1305:1368   */\n      swap2\n      pop\n        /* \"#utility.yul\":1261:1378   */\n      pop\n        /* \"#utility.yul\":1189:1385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1391:1509   */\n    tag_183:\n        /* \"#utility.yul\":1478:1502   */\n      tag_185\n        /* \"#utility.yul\":1496:1501   */\n      dup2\n        /* \"#utility.yul\":1478:1502   */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1473:1476   */\n      dup3\n        /* \"#utility.yul\":1466:1503   */\n      mstore\n        /* \"#utility.yul\":1456:1509   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1515:1881   */\n    tag_187:\n        /* \"#utility.yul\":1657:1660   */\n      0x00\n        /* \"#utility.yul\":1678:1745   */\n      tag_189\n        /* \"#utility.yul\":1742:1744   */\n      0x26\n        /* \"#utility.yul\":1737:1740   */\n      dup4\n        /* \"#utility.yul\":1678:1745   */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1671:1745   */\n      swap2\n      pop\n        /* \"#utility.yul\":1754:1847   */\n      tag_191\n        /* \"#utility.yul\":1843:1846   */\n      dup3\n        /* \"#utility.yul\":1754:1847   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1872:1874   */\n      0x40\n        /* \"#utility.yul\":1867:1870   */\n      dup3\n        /* \"#utility.yul\":1863:1875   */\n      add\n        /* \"#utility.yul\":1856:1875   */\n      swap1\n      pop\n        /* \"#utility.yul\":1661:1881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1887:2253   */\n    tag_193:\n        /* \"#utility.yul\":2029:2032   */\n      0x00\n        /* \"#utility.yul\":2050:2117   */\n      tag_195\n        /* \"#utility.yul\":2114:2116   */\n      0x20\n        /* \"#utility.yul\":2109:2112   */\n      dup4\n        /* \"#utility.yul\":2050:2117   */\n      tag_190\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2043:2117   */\n      swap2\n      pop\n        /* \"#utility.yul\":2126:2219   */\n      tag_196\n        /* \"#utility.yul\":2215:2218   */\n      dup3\n        /* \"#utility.yul\":2126:2219   */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2244:2246   */\n      0x20\n        /* \"#utility.yul\":2239:2242   */\n      dup3\n        /* \"#utility.yul\":2235:2247   */\n      add\n        /* \"#utility.yul\":2228:2247   */\n      swap1\n      pop\n        /* \"#utility.yul\":2033:2253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2259:2377   */\n    tag_198:\n        /* \"#utility.yul\":2346:2370   */\n      tag_200\n        /* \"#utility.yul\":2364:2369   */\n      dup2\n        /* \"#utility.yul\":2346:2370   */\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2341:2344   */\n      dup3\n        /* \"#utility.yul\":2334:2371   */\n      mstore\n        /* \"#utility.yul\":2324:2377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2383:2501   */\n    tag_202:\n        /* \"#utility.yul\":2470:2494   */\n      tag_204\n        /* \"#utility.yul\":2488:2493   */\n      dup2\n        /* \"#utility.yul\":2470:2494   */\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2465:2468   */\n      dup3\n        /* \"#utility.yul\":2458:2495   */\n      mstore\n        /* \"#utility.yul\":2448:2501   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2507:2729   */\n    tag_58:\n        /* \"#utility.yul\":2600:2604   */\n      0x00\n        /* \"#utility.yul\":2638:2640   */\n      0x20\n        /* \"#utility.yul\":2627:2636   */\n      dup3\n        /* \"#utility.yul\":2623:2641   */\n      add\n        /* \"#utility.yul\":2615:2641   */\n      swap1\n      pop\n        /* \"#utility.yul\":2651:2722   */\n      tag_207\n        /* \"#utility.yul\":2719:2720   */\n      0x00\n        /* \"#utility.yul\":2708:2717   */\n      dup4\n        /* \"#utility.yul\":2704:2721   */\n      add\n        /* \"#utility.yul\":2695:2701   */\n      dup5\n        /* \"#utility.yul\":2651:2722   */\n      tag_183\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2605:2729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2735:3154   */\n    tag_149:\n        /* \"#utility.yul\":2901:2905   */\n      0x00\n        /* \"#utility.yul\":2939:2941   */\n      0x20\n        /* \"#utility.yul\":2928:2937   */\n      dup3\n        /* \"#utility.yul\":2924:2942   */\n      add\n        /* \"#utility.yul\":2916:2942   */\n      swap1\n      pop\n        /* \"#utility.yul\":2988:2997   */\n      dup2\n        /* \"#utility.yul\":2982:2986   */\n      dup2\n        /* \"#utility.yul\":2978:2998   */\n      sub\n        /* \"#utility.yul\":2974:2975   */\n      0x00\n        /* \"#utility.yul\":2963:2972   */\n      dup4\n        /* \"#utility.yul\":2959:2976   */\n      add\n        /* \"#utility.yul\":2952:2999   */\n      mstore\n        /* \"#utility.yul\":3016:3147   */\n      tag_209\n        /* \"#utility.yul\":3142:3146   */\n      dup2\n        /* \"#utility.yul\":3016:3147   */\n      tag_187\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3008:3147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2906:3154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3160:3579   */\n    tag_157:\n        /* \"#utility.yul\":3326:3330   */\n      0x00\n        /* \"#utility.yul\":3364:3366   */\n      0x20\n        /* \"#utility.yul\":3353:3362   */\n      dup3\n        /* \"#utility.yul\":3349:3367   */\n      add\n        /* \"#utility.yul\":3341:3367   */\n      swap1\n      pop\n        /* \"#utility.yul\":3413:3422   */\n      dup2\n        /* \"#utility.yul\":3407:3411   */\n      dup2\n        /* \"#utility.yul\":3403:3423   */\n      sub\n        /* \"#utility.yul\":3399:3400   */\n      0x00\n        /* \"#utility.yul\":3388:3397   */\n      dup4\n        /* \"#utility.yul\":3384:3401   */\n      add\n        /* \"#utility.yul\":3377:3424   */\n      mstore\n        /* \"#utility.yul\":3441:3572   */\n      tag_211\n        /* \"#utility.yul\":3567:3571   */\n      dup2\n        /* \"#utility.yul\":3441:3572   */\n      tag_193\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3433:3572   */\n      swap1\n      pop\n        /* \"#utility.yul\":3331:3579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3585:3917   */\n    tag_50:\n        /* \"#utility.yul\":3706:3710   */\n      0x00\n        /* \"#utility.yul\":3744:3746   */\n      0x40\n        /* \"#utility.yul\":3733:3742   */\n      dup3\n        /* \"#utility.yul\":3729:3747   */\n      add\n        /* \"#utility.yul\":3721:3747   */\n      swap1\n      pop\n        /* \"#utility.yul\":3757:3828   */\n      tag_213\n        /* \"#utility.yul\":3825:3826   */\n      0x00\n        /* \"#utility.yul\":3814:3823   */\n      dup4\n        /* \"#utility.yul\":3810:3827   */\n      add\n        /* \"#utility.yul\":3801:3807   */\n      dup6\n        /* \"#utility.yul\":3757:3828   */\n      tag_198\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3838:3910   */\n      tag_214\n        /* \"#utility.yul\":3906:3908   */\n      0x20\n        /* \"#utility.yul\":3895:3904   */\n      dup4\n        /* \"#utility.yul\":3891:3909   */\n      add\n        /* \"#utility.yul\":3882:3888   */\n      dup5\n        /* \"#utility.yul\":3838:3910   */\n      tag_198\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":3711:3917   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3923:4145   */\n    tag_28:\n        /* \"#utility.yul\":4016:4020   */\n      0x00\n        /* \"#utility.yul\":4054:4056   */\n      0x20\n        /* \"#utility.yul\":4043:4052   */\n      dup3\n        /* \"#utility.yul\":4039:4057   */\n      add\n        /* \"#utility.yul\":4031:4057   */\n      swap1\n      pop\n        /* \"#utility.yul\":4067:4138   */\n      tag_216\n        /* \"#utility.yul\":4135:4136   */\n      0x00\n        /* \"#utility.yul\":4124:4133   */\n      dup4\n        /* \"#utility.yul\":4120:4137   */\n      add\n        /* \"#utility.yul\":4111:4117   */\n      dup5\n        /* \"#utility.yul\":4067:4138   */\n      tag_202\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4021:4145   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4151:4320   */\n    tag_190:\n        /* \"#utility.yul\":4235:4246   */\n      0x00\n        /* \"#utility.yul\":4269:4275   */\n      dup3\n        /* \"#utility.yul\":4264:4267   */\n      dup3\n        /* \"#utility.yul\":4257:4276   */\n      mstore\n        /* \"#utility.yul\":4309:4313   */\n      0x20\n        /* \"#utility.yul\":4304:4307   */\n      dup3\n        /* \"#utility.yul\":4300:4314   */\n      add\n        /* \"#utility.yul\":4285:4314   */\n      swap1\n      pop\n        /* \"#utility.yul\":4247:4320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4326:4631   */\n    tag_132:\n        /* \"#utility.yul\":4366:4369   */\n      0x00\n        /* \"#utility.yul\":4385:4405   */\n      tag_219\n        /* \"#utility.yul\":4403:4404   */\n      dup3\n        /* \"#utility.yul\":4385:4405   */\n      tag_205\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4380:4405   */\n      swap2\n      pop\n        /* \"#utility.yul\":4419:4439   */\n      tag_220\n        /* \"#utility.yul\":4437:4438   */\n      dup4\n        /* \"#utility.yul\":4419:4439   */\n      tag_205\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4414:4439   */\n      swap3\n      pop\n        /* \"#utility.yul\":4573:4574   */\n      dup3\n        /* \"#utility.yul\":4505:4571   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4501:4575   */\n      sub\n        /* \"#utility.yul\":4498:4499   */\n      dup3\n        /* \"#utility.yul\":4495:4576   */\n      gt\n        /* \"#utility.yul\":4492:4494   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":4579:4597   */\n      tag_222\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":4492:4494   */\n    tag_221:\n        /* \"#utility.yul\":4623:4624   */\n      dup3\n        /* \"#utility.yul\":4620:4621   */\n      dup3\n        /* \"#utility.yul\":4616:4625   */\n      add\n        /* \"#utility.yul\":4609:4625   */\n      swap1\n      pop\n        /* \"#utility.yul\":4370:4631   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4637:4822   */\n    tag_142:\n        /* \"#utility.yul\":4677:4678   */\n      0x00\n        /* \"#utility.yul\":4694:4714   */\n      tag_225\n        /* \"#utility.yul\":4712:4713   */\n      dup3\n        /* \"#utility.yul\":4694:4714   */\n      tag_205\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4689:4714   */\n      swap2\n      pop\n        /* \"#utility.yul\":4728:4748   */\n      tag_226\n        /* \"#utility.yul\":4746:4747   */\n      dup4\n        /* \"#utility.yul\":4728:4748   */\n      tag_205\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4723:4748   */\n      swap3\n      pop\n        /* \"#utility.yul\":4767:4768   */\n      dup3\n        /* \"#utility.yul\":4757:4759   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":4772:4790   */\n      tag_228\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4757:4759   */\n    tag_227:\n        /* \"#utility.yul\":4814:4815   */\n      dup3\n        /* \"#utility.yul\":4811:4812   */\n      dup3\n        /* \"#utility.yul\":4807:4816   */\n      div\n        /* \"#utility.yul\":4802:4816   */\n      swap1\n      pop\n        /* \"#utility.yul\":4679:4822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4828:5019   */\n    tag_108:\n        /* \"#utility.yul\":4868:4872   */\n      0x00\n        /* \"#utility.yul\":4888:4908   */\n      tag_231\n        /* \"#utility.yul\":4906:4907   */\n      dup3\n        /* \"#utility.yul\":4888:4908   */\n      tag_205\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4883:4908   */\n      swap2\n      pop\n        /* \"#utility.yul\":4922:4942   */\n      tag_232\n        /* \"#utility.yul\":4940:4941   */\n      dup4\n        /* \"#utility.yul\":4922:4942   */\n      tag_205\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4917:4942   */\n      swap3\n      pop\n        /* \"#utility.yul\":4961:4962   */\n      dup3\n        /* \"#utility.yul\":4958:4959   */\n      dup3\n        /* \"#utility.yul\":4955:4963   */\n      lt\n        /* \"#utility.yul\":4952:4954   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":4966:4984   */\n      tag_234\n      tag_223\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4952:4954   */\n    tag_233:\n        /* \"#utility.yul\":5011:5012   */\n      dup3\n        /* \"#utility.yul\":5008:5009   */\n      dup3\n        /* \"#utility.yul\":5004:5013   */\n      sub\n        /* \"#utility.yul\":4996:5013   */\n      swap1\n      pop\n        /* \"#utility.yul\":4873:5019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5025:5121   */\n    tag_186:\n        /* \"#utility.yul\":5062:5069   */\n      0x00\n        /* \"#utility.yul\":5091:5115   */\n      tag_236\n        /* \"#utility.yul\":5109:5114   */\n      dup3\n        /* \"#utility.yul\":5091:5115   */\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5080:5115   */\n      swap1\n      pop\n        /* \"#utility.yul\":5070:5121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5127:5245   */\n    tag_201:\n        /* \"#utility.yul\":5164:5171   */\n      0x00\n        /* \"#utility.yul\":5204:5238   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5197:5202   */\n      dup3\n        /* \"#utility.yul\":5193:5239   */\n      and\n        /* \"#utility.yul\":5182:5239   */\n      swap1\n      pop\n        /* \"#utility.yul\":5172:5245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5251:5377   */\n    tag_237:\n        /* \"#utility.yul\":5288:5295   */\n      0x00\n        /* \"#utility.yul\":5328:5370   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5321:5326   */\n      dup3\n        /* \"#utility.yul\":5317:5371   */\n      and\n        /* \"#utility.yul\":5306:5371   */\n      swap1\n      pop\n        /* \"#utility.yul\":5296:5377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5383:5460   */\n    tag_205:\n        /* \"#utility.yul\":5420:5427   */\n      0x00\n        /* \"#utility.yul\":5449:5454   */\n      dup2\n        /* \"#utility.yul\":5438:5454   */\n      swap1\n      pop\n        /* \"#utility.yul\":5428:5460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5466:5699   */\n    tag_123:\n        /* \"#utility.yul\":5505:5508   */\n      0x00\n        /* \"#utility.yul\":5528:5552   */\n      tag_242\n        /* \"#utility.yul\":5546:5551   */\n      dup3\n        /* \"#utility.yul\":5528:5552   */\n      tag_205\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5519:5552   */\n      swap2\n      pop\n        /* \"#utility.yul\":5574:5640   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5567:5572   */\n      dup3\n        /* \"#utility.yul\":5564:5641   */\n      eq\n        /* \"#utility.yul\":5561:5563   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":5644:5662   */\n      tag_244\n      tag_223\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5561:5563   */\n    tag_243:\n        /* \"#utility.yul\":5691:5692   */\n      0x01\n        /* \"#utility.yul\":5684:5689   */\n      dup3\n        /* \"#utility.yul\":5680:5693   */\n      add\n        /* \"#utility.yul\":5673:5693   */\n      swap1\n      pop\n        /* \"#utility.yul\":5509:5699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5705:5885   */\n    tag_223:\n        /* \"#utility.yul\":5753:5830   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5750:5751   */\n      0x00\n        /* \"#utility.yul\":5743:5831   */\n      mstore\n        /* \"#utility.yul\":5850:5854   */\n      0x11\n        /* \"#utility.yul\":5847:5848   */\n      0x04\n        /* \"#utility.yul\":5840:5855   */\n      mstore\n        /* \"#utility.yul\":5874:5878   */\n      0x24\n        /* \"#utility.yul\":5871:5872   */\n      0x00\n        /* \"#utility.yul\":5864:5879   */\n      revert\n        /* \"#utility.yul\":5891:6071   */\n    tag_229:\n        /* \"#utility.yul\":5939:6016   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5936:5937   */\n      0x00\n        /* \"#utility.yul\":5929:6017   */\n      mstore\n        /* \"#utility.yul\":6036:6040   */\n      0x12\n        /* \"#utility.yul\":6033:6034   */\n      0x04\n        /* \"#utility.yul\":6026:6041   */\n      mstore\n        /* \"#utility.yul\":6060:6064   */\n      0x24\n        /* \"#utility.yul\":6057:6058   */\n      0x00\n        /* \"#utility.yul\":6050:6065   */\n      revert\n        /* \"#utility.yul\":6077:6302   */\n    tag_192:\n        /* \"#utility.yul\":6217:6251   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6213:6214   */\n      0x00\n        /* \"#utility.yul\":6205:6211   */\n      dup3\n        /* \"#utility.yul\":6201:6215   */\n      add\n        /* \"#utility.yul\":6194:6252   */\n      mstore\n        /* \"#utility.yul\":6286:6294   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6281:6283   */\n      0x20\n        /* \"#utility.yul\":6273:6279   */\n      dup3\n        /* \"#utility.yul\":6269:6284   */\n      add\n        /* \"#utility.yul\":6262:6295   */\n      mstore\n        /* \"#utility.yul\":6183:6302   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6308:6490   */\n    tag_197:\n        /* \"#utility.yul\":6448:6482   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6444:6445   */\n      0x00\n        /* \"#utility.yul\":6436:6442   */\n      dup3\n        /* \"#utility.yul\":6432:6446   */\n      add\n        /* \"#utility.yul\":6425:6483   */\n      mstore\n        /* \"#utility.yul\":6414:6490   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6496:6618   */\n    tag_164:\n        /* \"#utility.yul\":6569:6593   */\n      tag_250\n        /* \"#utility.yul\":6587:6592   */\n      dup2\n        /* \"#utility.yul\":6569:6593   */\n      tag_186\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6562:6567   */\n      dup2\n        /* \"#utility.yul\":6559:6594   */\n      eq\n        /* \"#utility.yul\":6549:6551   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":6608:6609   */\n      0x00\n        /* \"#utility.yul\":6605:6606   */\n      dup1\n        /* \"#utility.yul\":6598:6610   */\n      revert\n        /* \"#utility.yul\":6549:6551   */\n    tag_251:\n        /* \"#utility.yul\":6539:6618   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6624:6746   */\n    tag_168:\n        /* \"#utility.yul\":6697:6721   */\n      tag_253\n        /* \"#utility.yul\":6715:6720   */\n      dup2\n        /* \"#utility.yul\":6697:6721   */\n      tag_201\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6690:6695   */\n      dup2\n        /* \"#utility.yul\":6687:6722   */\n      eq\n        /* \"#utility.yul\":6677:6679   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":6736:6737   */\n      0x00\n        /* \"#utility.yul\":6733:6734   */\n      dup1\n        /* \"#utility.yul\":6726:6738   */\n      revert\n        /* \"#utility.yul\":6677:6679   */\n    tag_254:\n        /* \"#utility.yul\":6667:6746   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6752:6874   */\n    tag_172:\n        /* \"#utility.yul\":6825:6849   */\n      tag_256\n        /* \"#utility.yul\":6843:6848   */\n      dup2\n        /* \"#utility.yul\":6825:6849   */\n      tag_205\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":6818:6823   */\n      dup2\n        /* \"#utility.yul\":6815:6850   */\n      eq\n        /* \"#utility.yul\":6805:6807   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":6864:6865   */\n      0x00\n        /* \"#utility.yul\":6861:6862   */\n      dup1\n        /* \"#utility.yul\":6854:6866   */\n      revert\n        /* \"#utility.yul\":6805:6807   */\n    tag_257:\n        /* \"#utility.yul\":6795:6874   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b6f9419114243f22230b8b4e63ba72cfc047412b555312477c3e748c17f1c40d64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526064600155603c60035534801561001a57600080fd5b5061003761002c61004360201b60201c565b61004b60201b60201c565b4260028190555061010f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f8b8061011e6000396000f3fe6080604052600436106100f65760003560e01c8063a0b9d8be1161008a578063d97c94ac11610059578063d97c94ac146102de578063db62b20114610307578063e608d80b14610332578063f2fde38b1461035d576100fd565b8063a0b9d8be14610236578063be9a65551461025f578063c7841dd21461028a578063cfb9cfba146102b3576100fd565b8063715018a6116100c6578063715018a61461019f57806377441b70146101b657806377a0fe02146101f45780638da5cb5b1461020b576100fd565b806227d97014610102578063143e55e01461012d5780634455a38f1461015857806352b73e4114610183576100fd565b366100fd57005b600080fd5b34801561010e57600080fd5b50610117610386565b6040516101249190610cb2565b60405180910390f35b34801561013957600080fd5b5061014261038c565b60405161014f9190610cb2565b60405180910390f35b34801561016457600080fd5b5061016d610392565b60405161017a9190610cb2565b60405180910390f35b61019d60048036038101906101989190610b56565b610398565b005b3480156101ab57600080fd5b506101b461039c565b005b3480156101c257600080fd5b506101dd60048036038101906101d89190610b92565b6103b0565b6040516101eb929190610c89565b60405180910390f35b34801561020057600080fd5b50610209610418565b005b34801561021757600080fd5b50610220610713565b60405161022d9190610c2e565b60405180910390f35b34801561024257600080fd5b5061025d60048036038101906102589190610b2d565b61073c565b005b34801561026b57600080fd5b50610274610798565b6040516102819190610cb2565b60405180910390f35b34801561029657600080fd5b506102b160048036038101906102ac9190610b56565b61079e565b005b3480156102bf57600080fd5b506102c86108d8565b6040516102d59190610cb2565b60405180910390f35b3480156102ea57600080fd5b5061030560048036038101906103009190610b92565b6108de565b005b34801561031357600080fd5b5061031c6108e8565b6040516103299190610cb2565b60405180910390f35b34801561033e57600080fd5b506103476108f1565b6040516103549190610cb2565b60405180910390f35b34801561036957600080fd5b50610384600480360381019061037f9190610b2d565b610920565b005b60045481565b60015481565b60035481565b5050565b6103a46109a4565b6103ae6000610a22565b565b600681815481106103c057600080fd5b906000526020600020016000915090508060000160009054906101000a90046fffffffffffffffffffffffffffffffff16908060000160109054906101000a90046fffffffffffffffffffffffffffffffff16905082565b60005b60068054905081101561071057600a60068281548110610464577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16426104ab9190610d65565b1015801561052e57506000600682815481106104f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b156106fd573373ffffffffffffffffffffffffffffffffffffffff166108fc60068381548110610587577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f193505050501580156105ee573d6000803e3d6000fd5b5060068181548110610629577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600460008282546106769190610d65565b925050819055506000600682815481106106b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505b808061070890610df1565b91505061041b565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107446109a4565b3373ffffffffffffffffffffffffffffffffffffffff166108fc6005549081150290604051600060405180830381858888f1935050505015801561078c573d6000803e3d6000fd5b50600060058190555050565b60025481565b806fffffffffffffffffffffffffffffffff16600460008282546107c29190610cde565b9250508190555047600454116108d45760066040518060400160405280836fffffffffffffffffffffffffffffffff1681526020016107ff6108f1565b6fffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060208201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050506001600560008282546108cc9190610cde565b925050819055505b5050565b60055481565b8060038190555050565b6000600a905090565b6000600354600254426109049190610d65565b61090e9190610d34565b60015461091b9190610cde565b905090565b6109286109a4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610998576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098f90610c49565b60405180910390fd5b6109a181610a22565b50565b6109ac610ae6565b73ffffffffffffffffffffffffffffffffffffffff166109ca610713565b73ffffffffffffffffffffffffffffffffffffffff1614610a20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1790610c69565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081359050610afd81610f10565b92915050565b600081359050610b1281610f27565b92915050565b600081359050610b2781610f3e565b92915050565b600060208284031215610b3f57600080fd5b6000610b4d84828501610aee565b91505092915050565b60008060408385031215610b6957600080fd5b6000610b7785828601610aee565b9250506020610b8885828601610b03565b9150509250929050565b600060208284031215610ba457600080fd5b6000610bb284828501610b18565b91505092915050565b610bc481610d99565b82525050565b6000610bd7602683610ccd565b9150610be282610e98565b604082019050919050565b6000610bfa602083610ccd565b9150610c0582610ee7565b602082019050919050565b610c1981610dab565b82525050565b610c2881610de7565b82525050565b6000602082019050610c436000830184610bbb565b92915050565b60006020820190508181036000830152610c6281610bca565b9050919050565b60006020820190508181036000830152610c8281610bed565b9050919050565b6000604082019050610c9e6000830185610c10565b610cab6020830184610c10565b9392505050565b6000602082019050610cc76000830184610c1f565b92915050565b600082825260208201905092915050565b6000610ce982610de7565b9150610cf483610de7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2957610d28610e3a565b5b828201905092915050565b6000610d3f82610de7565b9150610d4a83610de7565b925082610d5a57610d59610e69565b5b828204905092915050565b6000610d7082610de7565b9150610d7b83610de7565b925082821015610d8e57610d8d610e3a565b5b828203905092915050565b6000610da482610dc7565b9050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610dfc82610de7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e2f57610e2e610e3a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610f1981610d99565b8114610f2457600080fd5b50565b610f3081610dab565b8114610f3b57600080fd5b50565b610f4781610de7565b8114610f5257600080fd5b5056fea2646970667358221220b6f9419114243f22230b8b4e63ba72cfc047412b555312477c3e748c17f1c40d64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x1 SSTORE PUSH1 0x3C PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37 PUSH2 0x2C PUSH2 0x43 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x4B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x10F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF8B DUP1 PUSH2 0x11E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0B9D8BE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD97C94AC GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD97C94AC EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xDB62B201 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xE608D80B EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x35D JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0xA0B9D8BE EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xC7841DD2 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xCFB9CFBA EQ PUSH2 0x2B3 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x77441B70 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x77A0FE02 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20B JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH3 0x27D970 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x143E55E0 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x4455A38F EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x52B73E41 EQ PUSH2 0x183 JUMPI PUSH2 0xFD JUMP JUMPDEST CALLDATASIZE PUSH2 0xFD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH2 0x39C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP3 SWAP2 SWAP1 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH2 0x418 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0x73C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x8DE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3A4 PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0x3AE PUSH1 0x0 PUSH2 0xA22 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x710 JUMPI PUSH1 0xA PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x464 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4F0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT JUMPDEST ISZERO PUSH2 0x6FD JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x587 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x629 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x676 SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6B9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0x708 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x41B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x744 PUSH2 0x9A4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x5 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x78C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP SELFBALANCE PUSH1 0x4 SLOAD GT PUSH2 0x8D4 JUMPI PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7FF PUSH2 0x8F1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x904 SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x90E SWAP2 SWAP1 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x91B SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x928 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x998 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98F SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A1 DUP2 PUSH2 0xA22 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9AC PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9CA PUSH2 0x713 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA17 SWAP1 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAFD DUP2 PUSH2 0xF10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB12 DUP2 PUSH2 0xF27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB27 DUP2 PUSH2 0xF3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP5 DUP3 DUP6 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB77 DUP6 DUP3 DUP7 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB88 DUP6 DUP3 DUP7 ADD PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBB2 DUP5 DUP3 DUP6 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC4 DUP2 PUSH2 0xD99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD7 PUSH1 0x26 DUP4 PUSH2 0xCCD JUMP JUMPDEST SWAP2 POP PUSH2 0xBE2 DUP3 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFA PUSH1 0x20 DUP4 PUSH2 0xCCD JUMP JUMPDEST SWAP2 POP PUSH2 0xC05 DUP3 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC19 DUP2 PUSH2 0xDAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC28 DUP2 PUSH2 0xDE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC62 DUP2 PUSH2 0xBCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC82 DUP2 PUSH2 0xBED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC9E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC10 JUMP JUMPDEST PUSH2 0xCAB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC10 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE9 DUP3 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF4 DUP4 PUSH2 0xDE7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xD29 JUMPI PUSH2 0xD28 PUSH2 0xE3A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3F DUP3 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH2 0xD4A DUP4 PUSH2 0xDE7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xD5A JUMPI PUSH2 0xD59 PUSH2 0xE69 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD70 DUP3 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH2 0xD7B DUP4 PUSH2 0xDE7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xD8E JUMPI PUSH2 0xD8D PUSH2 0xE3A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP3 PUSH2 0xDC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFC DUP3 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xE2F JUMPI PUSH2 0xE2E PUSH2 0xE3A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xF19 DUP2 PUSH2 0xD99 JUMP JUMPDEST DUP2 EQ PUSH2 0xF24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF30 DUP2 PUSH2 0xDAB JUMP JUMPDEST DUP2 EQ PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF47 DUP2 PUSH2 0xDE7 JUMP JUMPDEST DUP2 EQ PUSH2 0xF52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xF9 COINBASE SWAP2 EQ 0x24 EXTCODEHASH 0x22 0x23 SIGNEXTEND DUP12 0x4E PUSH4 0xBA72CFC0 SELFBALANCE COINBASE 0x2B SSTORE MSTORE8 SLT SELFBALANCE PUSH29 0x3E748C17F1C40D64736F6C634300080400330000000000000000000000 ",
							"sourceMap": "149:2152:2:-:0;;;213:3;192:24;;277:2;248:31;;462:54;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;494:15:2;486:5;:23;;;;149:2152;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;149:2152:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6877:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "359:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "381:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "368:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "368:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "359:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "424:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "397:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "397:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "397:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "327:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "335:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "343:5:4",
														"type": ""
													}
												],
												"src": "297:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "508:196:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "554:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "563:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "566:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "556:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "556:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "556:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "529:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "538:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "525:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:32:4"
															},
															"nodeType": "YulIf",
															"src": "518:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "580:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "595:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "609:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "599:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "624:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "659:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "655:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "655:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "679:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "634:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "634:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "624:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "478:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "489:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "501:6:4",
														"type": ""
													}
												],
												"src": "442:262:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "793:324:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "839:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "848:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "851:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "841:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "841:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "814:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "823:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "810:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "810:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "835:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "806:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:32:4"
															},
															"nodeType": "YulIf",
															"src": "803:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "865:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "880:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "894:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "884:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "909:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "944:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "955:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "940:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "940:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "964:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "919:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "919:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "909:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "992:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1007:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1021:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1011:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1037:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1072:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1083:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1068:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1068:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1092:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128",
																			"nodeType": "YulIdentifier",
																			"src": "1047:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1047:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1037:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "755:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "766:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "778:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "786:6:4",
														"type": ""
													}
												],
												"src": "710:407:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1189:196:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1235:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1244:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1247:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1237:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1237:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1237:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1210:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1219:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1206:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1206:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1231:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1202:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:32:4"
															},
															"nodeType": "YulIf",
															"src": "1199:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1261:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1276:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1280:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1305:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1340:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1351:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1336:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1336:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1360:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1315:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1315:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1305:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1159:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1170:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1182:6:4",
														"type": ""
													}
												],
												"src": "1123:262:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1456:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1473:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1496:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1478:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1478:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1444:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1451:3:4",
														"type": ""
													}
												],
												"src": "1391:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1661:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1671:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1737:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1742:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1678:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1671:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1843:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "1754:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1754:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1856:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1867:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1872:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1863:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1856:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1649:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1657:3:4",
														"type": ""
													}
												],
												"src": "1515:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2033:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2043:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2109:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2114:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2050:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2050:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2043:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2215:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "2126:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2126:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2126:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2228:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2239:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2244:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2235:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2235:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2228:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2021:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2029:3:4",
														"type": ""
													}
												],
												"src": "1887:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2324:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2341:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2364:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint128",
																			"nodeType": "YulIdentifier",
																			"src": "2346:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2346:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2334:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2334:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2312:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2319:3:4",
														"type": ""
													}
												],
												"src": "2259:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2448:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2465:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2488:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2470:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2470:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2458:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2458:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2436:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2443:3:4",
														"type": ""
													}
												],
												"src": "2383:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2605:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2615:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2627:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2638:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2615:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2695:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2708:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2719:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2704:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2704:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2651:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2651:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2577:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2589:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2600:4:4",
														"type": ""
													}
												],
												"src": "2507:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2906:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2916:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2928:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2939:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2924:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2924:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2916:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2963:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2974:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2982:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2988:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2978:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2978:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2952:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2952:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2952:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3008:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3142:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3016:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3008:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2886:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2901:4:4",
														"type": ""
													}
												],
												"src": "2735:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3331:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3341:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3353:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3364:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3349:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3349:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3341:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3388:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3384:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3384:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3407:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3413:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3403:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3403:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3377:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3377:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3377:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3433:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3567:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3441:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3441:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3433:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3311:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3326:4:4",
														"type": ""
													}
												],
												"src": "3160:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3711:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3721:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3733:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3744:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3729:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3729:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3721:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3801:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3814:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3825:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3757:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3757:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3882:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3895:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3906:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3891:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3891:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3838:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3838:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3675:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3687:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3695:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3706:4:4",
														"type": ""
													}
												],
												"src": "3585:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4021:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4031:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4043:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4054:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4039:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4039:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4031:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4111:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4124:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4135:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4120:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4067:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4067:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3993:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4005:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4016:4:4",
														"type": ""
													}
												],
												"src": "3923:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4247:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4264:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4269:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4257:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4257:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4257:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4285:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4304:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4309:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4300:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4285:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4219:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4224:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4235:11:4",
														"type": ""
													}
												],
												"src": "4151:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4370:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4380:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4403:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4385:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4380:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4414:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4437:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4419:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4419:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4414:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4577:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4579:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4579:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4579:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4498:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4505:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4573:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4501:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4501:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4495:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4495:81:4"
															},
															"nodeType": "YulIf",
															"src": "4492:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4609:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4620:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4623:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4616:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4616:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4609:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4357:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4360:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4366:3:4",
														"type": ""
													}
												],
												"src": "4326:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4679:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4689:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4712:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4694:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4694:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4689:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4723:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4746:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4728:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4728:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4723:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4770:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4772:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4772:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4772:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4767:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4760:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4760:9:4"
															},
															"nodeType": "YulIf",
															"src": "4757:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4802:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4811:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4814:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4807:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4807:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4802:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4668:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4671:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4677:1:4",
														"type": ""
													}
												],
												"src": "4637:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4873:146:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4883:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4906:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4888:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4888:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4883:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4917:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4940:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4922:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4917:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4964:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4966:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4966:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4966:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4958:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4961:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4955:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4955:8:4"
															},
															"nodeType": "YulIf",
															"src": "4952:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4996:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5008:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5011:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5004:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4996:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4859:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4862:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4868:4:4",
														"type": ""
													}
												],
												"src": "4828:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5070:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5080:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5109:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5091:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5091:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5080:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5052:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5062:7:4",
														"type": ""
													}
												],
												"src": "5025:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:73:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5182:57:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5197:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5204:34:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5193:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5193:46:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5182:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5154:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5164:7:4",
														"type": ""
													}
												],
												"src": "5127:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5296:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5306:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5321:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5328:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5317:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5317:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5306:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5278:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5288:7:4",
														"type": ""
													}
												],
												"src": "5251:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5428:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5438:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5449:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5438:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5410:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5420:7:4",
														"type": ""
													}
												],
												"src": "5383:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5509:190:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5519:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5546:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5528:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5528:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5519:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5642:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5644:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5644:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5644:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5567:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5574:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5564:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:77:4"
															},
															"nodeType": "YulIf",
															"src": "5561:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5673:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5684:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5691:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5680:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5680:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5673:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5495:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5505:3:4",
														"type": ""
													}
												],
												"src": "5466:233:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5733:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5750:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5753:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5743:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5743:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5743:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5847:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5850:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5840:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5840:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5840:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5871:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5874:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5864:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5864:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5864:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5705:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5919:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5936:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5939:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5929:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5929:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5929:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6033:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6036:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6026:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6026:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6026:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6057:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6060:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6050:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6050:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6050:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5891:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6183:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6205:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6213:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6201:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6201:14:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6217:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6194:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6194:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6194:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6273:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6281:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6269:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6269:15:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6286:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6262:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6262:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6262:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6175:6:4",
														"type": ""
													}
												],
												"src": "6077:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6414:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6436:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6444:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6432:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6432:14:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6448:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6425:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6425:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6425:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6406:6:4",
														"type": ""
													}
												],
												"src": "6308:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6539:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6596:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6605:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6608:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6598:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6598:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6598:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6562:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6587:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6569:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6569:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6559:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6559:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6552:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6552:43:4"
															},
															"nodeType": "YulIf",
															"src": "6549:2:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6532:5:4",
														"type": ""
													}
												],
												"src": "6496:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6667:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6724:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6733:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6736:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6726:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6726:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6726:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6690:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6715:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint128",
																					"nodeType": "YulIdentifier",
																					"src": "6697:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6697:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6687:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6687:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6680:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6680:43:4"
															},
															"nodeType": "YulIf",
															"src": "6677:2:4"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6660:5:4",
														"type": ""
													}
												],
												"src": "6624:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6795:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6852:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6861:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6864:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6854:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6854:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6854:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6818:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6843:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6825:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6825:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6815:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6815:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6808:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6808:43:4"
															},
															"nodeType": "YulIf",
															"src": "6805:2:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6788:5:4",
														"type": ""
													}
												],
												"src": "6752:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint128(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint128(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint128_t_uint128__to_t_uint128_t_uint128__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f65760003560e01c8063a0b9d8be1161008a578063d97c94ac11610059578063d97c94ac146102de578063db62b20114610307578063e608d80b14610332578063f2fde38b1461035d576100fd565b8063a0b9d8be14610236578063be9a65551461025f578063c7841dd21461028a578063cfb9cfba146102b3576100fd565b8063715018a6116100c6578063715018a61461019f57806377441b70146101b657806377a0fe02146101f45780638da5cb5b1461020b576100fd565b806227d97014610102578063143e55e01461012d5780634455a38f1461015857806352b73e4114610183576100fd565b366100fd57005b600080fd5b34801561010e57600080fd5b50610117610386565b6040516101249190610cb2565b60405180910390f35b34801561013957600080fd5b5061014261038c565b60405161014f9190610cb2565b60405180910390f35b34801561016457600080fd5b5061016d610392565b60405161017a9190610cb2565b60405180910390f35b61019d60048036038101906101989190610b56565b610398565b005b3480156101ab57600080fd5b506101b461039c565b005b3480156101c257600080fd5b506101dd60048036038101906101d89190610b92565b6103b0565b6040516101eb929190610c89565b60405180910390f35b34801561020057600080fd5b50610209610418565b005b34801561021757600080fd5b50610220610713565b60405161022d9190610c2e565b60405180910390f35b34801561024257600080fd5b5061025d60048036038101906102589190610b2d565b61073c565b005b34801561026b57600080fd5b50610274610798565b6040516102819190610cb2565b60405180910390f35b34801561029657600080fd5b506102b160048036038101906102ac9190610b56565b61079e565b005b3480156102bf57600080fd5b506102c86108d8565b6040516102d59190610cb2565b60405180910390f35b3480156102ea57600080fd5b5061030560048036038101906103009190610b92565b6108de565b005b34801561031357600080fd5b5061031c6108e8565b6040516103299190610cb2565b60405180910390f35b34801561033e57600080fd5b506103476108f1565b6040516103549190610cb2565b60405180910390f35b34801561036957600080fd5b50610384600480360381019061037f9190610b2d565b610920565b005b60045481565b60015481565b60035481565b5050565b6103a46109a4565b6103ae6000610a22565b565b600681815481106103c057600080fd5b906000526020600020016000915090508060000160009054906101000a90046fffffffffffffffffffffffffffffffff16908060000160109054906101000a90046fffffffffffffffffffffffffffffffff16905082565b60005b60068054905081101561071057600a60068281548110610464577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16426104ab9190610d65565b1015801561052e57506000600682815481106104f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b156106fd573373ffffffffffffffffffffffffffffffffffffffff166108fc60068381548110610587577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f193505050501580156105ee573d6000803e3d6000fd5b5060068181548110610629577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600460008282546106769190610d65565b925050819055506000600682815481106106b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505b808061070890610df1565b91505061041b565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107446109a4565b3373ffffffffffffffffffffffffffffffffffffffff166108fc6005549081150290604051600060405180830381858888f1935050505015801561078c573d6000803e3d6000fd5b50600060058190555050565b60025481565b806fffffffffffffffffffffffffffffffff16600460008282546107c29190610cde565b9250508190555047600454116108d45760066040518060400160405280836fffffffffffffffffffffffffffffffff1681526020016107ff6108f1565b6fffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060208201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050506001600560008282546108cc9190610cde565b925050819055505b5050565b60055481565b8060038190555050565b6000600a905090565b6000600354600254426109049190610d65565b61090e9190610d34565b60015461091b9190610cde565b905090565b6109286109a4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610998576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098f90610c49565b60405180910390fd5b6109a181610a22565b50565b6109ac610ae6565b73ffffffffffffffffffffffffffffffffffffffff166109ca610713565b73ffffffffffffffffffffffffffffffffffffffff1614610a20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1790610c69565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081359050610afd81610f10565b92915050565b600081359050610b1281610f27565b92915050565b600081359050610b2781610f3e565b92915050565b600060208284031215610b3f57600080fd5b6000610b4d84828501610aee565b91505092915050565b60008060408385031215610b6957600080fd5b6000610b7785828601610aee565b9250506020610b8885828601610b03565b9150509250929050565b600060208284031215610ba457600080fd5b6000610bb284828501610b18565b91505092915050565b610bc481610d99565b82525050565b6000610bd7602683610ccd565b9150610be282610e98565b604082019050919050565b6000610bfa602083610ccd565b9150610c0582610ee7565b602082019050919050565b610c1981610dab565b82525050565b610c2881610de7565b82525050565b6000602082019050610c436000830184610bbb565b92915050565b60006020820190508181036000830152610c6281610bca565b9050919050565b60006020820190508181036000830152610c8281610bed565b9050919050565b6000604082019050610c9e6000830185610c10565b610cab6020830184610c10565b9392505050565b6000602082019050610cc76000830184610c1f565b92915050565b600082825260208201905092915050565b6000610ce982610de7565b9150610cf483610de7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2957610d28610e3a565b5b828201905092915050565b6000610d3f82610de7565b9150610d4a83610de7565b925082610d5a57610d59610e69565b5b828204905092915050565b6000610d7082610de7565b9150610d7b83610de7565b925082821015610d8e57610d8d610e3a565b5b828203905092915050565b6000610da482610dc7565b9050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610dfc82610de7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e2f57610e2e610e3a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610f1981610d99565b8114610f2457600080fd5b50565b610f3081610dab565b8114610f3b57600080fd5b50565b610f4781610de7565b8114610f5257600080fd5b5056fea2646970667358221220b6f9419114243f22230b8b4e63ba72cfc047412b555312477c3e748c17f1c40d64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0B9D8BE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD97C94AC GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD97C94AC EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xDB62B201 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xE608D80B EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x35D JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0xA0B9D8BE EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xC7841DD2 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xCFB9CFBA EQ PUSH2 0x2B3 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x77441B70 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x77A0FE02 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20B JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH3 0x27D970 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x143E55E0 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x4455A38F EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x52B73E41 EQ PUSH2 0x183 JUMPI PUSH2 0xFD JUMP JUMPDEST CALLDATASIZE PUSH2 0xFD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH2 0x39C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP3 SWAP2 SWAP1 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH2 0x418 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0x73C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x8DE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3A4 PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0x3AE PUSH1 0x0 PUSH2 0xA22 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x710 JUMPI PUSH1 0xA PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x464 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4F0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT JUMPDEST ISZERO PUSH2 0x6FD JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x587 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x629 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x676 SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6B9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0x708 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x41B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x744 PUSH2 0x9A4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x5 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x78C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP SELFBALANCE PUSH1 0x4 SLOAD GT PUSH2 0x8D4 JUMPI PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7FF PUSH2 0x8F1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x904 SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x90E SWAP2 SWAP1 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x91B SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x928 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x998 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98F SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A1 DUP2 PUSH2 0xA22 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9AC PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9CA PUSH2 0x713 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA17 SWAP1 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAFD DUP2 PUSH2 0xF10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB12 DUP2 PUSH2 0xF27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB27 DUP2 PUSH2 0xF3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP5 DUP3 DUP6 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB77 DUP6 DUP3 DUP7 ADD PUSH2 0xAEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB88 DUP6 DUP3 DUP7 ADD PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBB2 DUP5 DUP3 DUP6 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC4 DUP2 PUSH2 0xD99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD7 PUSH1 0x26 DUP4 PUSH2 0xCCD JUMP JUMPDEST SWAP2 POP PUSH2 0xBE2 DUP3 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFA PUSH1 0x20 DUP4 PUSH2 0xCCD JUMP JUMPDEST SWAP2 POP PUSH2 0xC05 DUP3 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC19 DUP2 PUSH2 0xDAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC28 DUP2 PUSH2 0xDE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC62 DUP2 PUSH2 0xBCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC82 DUP2 PUSH2 0xBED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC9E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC10 JUMP JUMPDEST PUSH2 0xCAB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC10 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE9 DUP3 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF4 DUP4 PUSH2 0xDE7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xD29 JUMPI PUSH2 0xD28 PUSH2 0xE3A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3F DUP3 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH2 0xD4A DUP4 PUSH2 0xDE7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xD5A JUMPI PUSH2 0xD59 PUSH2 0xE69 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD70 DUP3 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH2 0xD7B DUP4 PUSH2 0xDE7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xD8E JUMPI PUSH2 0xD8D PUSH2 0xE3A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP3 PUSH2 0xDC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFC DUP3 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xE2F JUMPI PUSH2 0xE2E PUSH2 0xE3A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xF19 DUP2 PUSH2 0xD99 JUMP JUMPDEST DUP2 EQ PUSH2 0xF24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF30 DUP2 PUSH2 0xDAB JUMP JUMPDEST DUP2 EQ PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF47 DUP2 PUSH2 0xDE7 JUMP JUMPDEST DUP2 EQ PUSH2 0xF52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xF9 COINBASE SWAP2 EQ 0x24 EXTCODEHASH 0x22 0x23 SIGNEXTEND DUP12 0x4E PUSH4 0xBA72CFC0 SELFBALANCE COINBASE 0x2B SSTORE MSTORE8 SLT SELFBALANCE PUSH29 0x3E748C17F1C40D64736F6C634300080400330000000000000000000000 ",
							"sourceMap": "149:2152:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;285:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;192:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;248:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;577:61;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;430:25:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1074:368;;;;;;;;;;;;;:::i;:::-;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1601:137:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;222:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;723:267;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;317:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2174:90;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2077:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1815:155;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;285:26:2;;;;:::o;192:24::-;;;;:::o;248:31::-;;;;:::o;577:61::-;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;430:25:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1074:368::-;1127:9;1122:314;1142:8;:15;;;;1138:1;:19;1122:314;;;1224:2;1200:8;1209:1;1200:11;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;1182:38;;:15;:38;;;;:::i;:::-;:44;;:70;;;;;1251:1;1230:8;1239:1;1230:11;;;;;;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;:22;;;1182:70;1178:248;;;1280:10;1272:28;;:48;1301:8;1310:1;1301:11;;;;;;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;1272:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:8;1362:1;1353:11;;;;;;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;1338:33;;:11;;:33;;;;;;;:::i;:::-;;;;;;;;1410:1;1389:8;1398:1;1389:11;;;;;;;;;;;;;;;;;;;;;;;:18;;;:22;;;;;;;;;;;;;;;;;;1178:248;1159:3;;;;;:::i;:::-;;;;1122:314;;;;1074:368::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1601:137:2:-;1094:13:0;:11;:13::i;:::-;1669:10:2::1;1661:28;;:43;1690:13;;1661:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1730:1;1714:13;:17;;;;1601:137:::0;:::o;222:20::-;;;;:::o;723:267::-;810:6;795:21;;:11;;:21;;;;;;;:::i;:::-;;;;;;;;845;830:11;;:36;826:158;;882:8;896:44;;;;;;;;904:6;896:44;;;;;;920:18;:16;:18::i;:::-;896:44;;;;;882:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:1;955:13;;:18;;;;;;;:::i;:::-;;;;;;;;826:158;723:267;;:::o;317:28::-;;;;:::o;2174:90::-;2248:9;2234:11;:23;;;;2174:90;:::o;2077:91::-;2133:7;2159:2;2152:9;;2077:91;:::o;1815:155::-;1864:7;1924:11;;1915:5;;1897:15;:23;;;;:::i;:::-;1896:39;;;;:::i;:::-;1890:3;;:45;;;;:::i;:::-;1883:52;;1815:155;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:139::-;343:5;381:6;368:20;359:29;;397:33;424:5;397:33;:::i;:::-;349:87;;;;:::o;442:262::-;501:6;550:2;538:9;529:7;525:23;521:32;518:2;;;566:1;563;556:12;518:2;609:1;634:53;679:7;670:6;659:9;655:22;634:53;:::i;:::-;624:63;;580:117;508:196;;;;:::o;710:407::-;778:6;786;835:2;823:9;814:7;810:23;806:32;803:2;;;851:1;848;841:12;803:2;894:1;919:53;964:7;955:6;944:9;940:22;919:53;:::i;:::-;909:63;;865:117;1021:2;1047:53;1092:7;1083:6;1072:9;1068:22;1047:53;:::i;:::-;1037:63;;992:118;793:324;;;;;:::o;1123:262::-;1182:6;1231:2;1219:9;1210:7;1206:23;1202:32;1199:2;;;1247:1;1244;1237:12;1199:2;1290:1;1315:53;1360:7;1351:6;1340:9;1336:22;1315:53;:::i;:::-;1305:63;;1261:117;1189:196;;;;:::o;1391:118::-;1478:24;1496:5;1478:24;:::i;:::-;1473:3;1466:37;1456:53;;:::o;1515:366::-;1657:3;1678:67;1742:2;1737:3;1678:67;:::i;:::-;1671:74;;1754:93;1843:3;1754:93;:::i;:::-;1872:2;1867:3;1863:12;1856:19;;1661:220;;;:::o;1887:366::-;2029:3;2050:67;2114:2;2109:3;2050:67;:::i;:::-;2043:74;;2126:93;2215:3;2126:93;:::i;:::-;2244:2;2239:3;2235:12;2228:19;;2033:220;;;:::o;2259:118::-;2346:24;2364:5;2346:24;:::i;:::-;2341:3;2334:37;2324:53;;:::o;2383:118::-;2470:24;2488:5;2470:24;:::i;:::-;2465:3;2458:37;2448:53;;:::o;2507:222::-;2600:4;2638:2;2627:9;2623:18;2615:26;;2651:71;2719:1;2708:9;2704:17;2695:6;2651:71;:::i;:::-;2605:124;;;;:::o;2735:419::-;2901:4;2939:2;2928:9;2924:18;2916:26;;2988:9;2982:4;2978:20;2974:1;2963:9;2959:17;2952:47;3016:131;3142:4;3016:131;:::i;:::-;3008:139;;2906:248;;;:::o;3160:419::-;3326:4;3364:2;3353:9;3349:18;3341:26;;3413:9;3407:4;3403:20;3399:1;3388:9;3384:17;3377:47;3441:131;3567:4;3441:131;:::i;:::-;3433:139;;3331:248;;;:::o;3585:332::-;3706:4;3744:2;3733:9;3729:18;3721:26;;3757:71;3825:1;3814:9;3810:17;3801:6;3757:71;:::i;:::-;3838:72;3906:2;3895:9;3891:18;3882:6;3838:72;:::i;:::-;3711:206;;;;;:::o;3923:222::-;4016:4;4054:2;4043:9;4039:18;4031:26;;4067:71;4135:1;4124:9;4120:17;4111:6;4067:71;:::i;:::-;4021:124;;;;:::o;4151:169::-;4235:11;4269:6;4264:3;4257:19;4309:4;4304:3;4300:14;4285:29;;4247:73;;;;:::o;4326:305::-;4366:3;4385:20;4403:1;4385:20;:::i;:::-;4380:25;;4419:20;4437:1;4419:20;:::i;:::-;4414:25;;4573:1;4505:66;4501:74;4498:1;4495:81;4492:2;;;4579:18;;:::i;:::-;4492:2;4623:1;4620;4616:9;4609:16;;4370:261;;;;:::o;4637:185::-;4677:1;4694:20;4712:1;4694:20;:::i;:::-;4689:25;;4728:20;4746:1;4728:20;:::i;:::-;4723:25;;4767:1;4757:2;;4772:18;;:::i;:::-;4757:2;4814:1;4811;4807:9;4802:14;;4679:143;;;;:::o;4828:191::-;4868:4;4888:20;4906:1;4888:20;:::i;:::-;4883:25;;4922:20;4940:1;4922:20;:::i;:::-;4917:25;;4961:1;4958;4955:8;4952:2;;;4966:18;;:::i;:::-;4952:2;5011:1;5008;5004:9;4996:17;;4873:146;;;;:::o;5025:96::-;5062:7;5091:24;5109:5;5091:24;:::i;:::-;5080:35;;5070:51;;;:::o;5127:118::-;5164:7;5204:34;5197:5;5193:46;5182:57;;5172:73;;;:::o;5251:126::-;5288:7;5328:42;5321:5;5317:54;5306:65;;5296:81;;;:::o;5383:77::-;5420:7;5449:5;5438:16;;5428:32;;;:::o;5466:233::-;5505:3;5528:24;5546:5;5528:24;:::i;:::-;5519:33;;5574:66;5567:5;5564:77;5561:2;;;5644:18;;:::i;:::-;5561:2;5691:1;5684:5;5680:13;5673:20;;5509:190;;;:::o;5705:180::-;5753:77;5750:1;5743:88;5850:4;5847:1;5840:15;5874:4;5871:1;5864:15;5891:180;5939:77;5936:1;5929:88;6036:4;6033:1;6026:15;6060:4;6057:1;6050:15;6077:225;6217:34;6213:1;6205:6;6201:14;6194:58;6286:8;6281:2;6273:6;6269:15;6262:33;6183:119;:::o;6308:182::-;6448:34;6444:1;6436:6;6432:14;6425:58;6414:76;:::o;6496:122::-;6569:24;6587:5;6569:24;:::i;:::-;6562:5;6559:35;6549:2;;6608:1;6605;6598:12;6549:2;6539:79;:::o;6624:122::-;6697:24;6715:5;6697:24;:::i;:::-;6690:5;6687:35;6677:2;;6736:1;6733;6726:12;6677:2;6667:79;:::o;6752:122::-;6825:24;6843:5;6825:24;:::i;:::-;6818:5;6815:35;6805:2;;6864:1;6861;6854:12;6805:2;6795:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "795800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"bond_and_stake(address,uint128)": "700",
								"claim_staker(address)": "infinite",
								"era()": "1175",
								"eraDuration()": "1197",
								"owner()": "1311",
								"read_current_era()": "infinite",
								"read_unbonding_period()": "381",
								"renounceOwnership()": "24421",
								"setEraDuration(uint256)": "20442",
								"stakerRewards()": "1218",
								"start()": "1174",
								"transferOwnership(address)": "24835",
								"unbond_and_unstake(address,uint128)": "infinite",
								"unstakes(uint256)": "infinite",
								"unstakesSum()": "1153",
								"withdraw_unbonded()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 149,
									"end": 2301,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 149,
									"end": 2301,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 149,
									"end": 2301,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 213,
									"end": 216,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 192,
									"end": 216,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 216,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 277,
									"end": 279,
									"name": "PUSH",
									"source": 2,
									"value": "3C"
								},
								{
									"begin": 248,
									"end": 279,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 248,
									"end": 279,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 462,
									"end": 516,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 462,
									"end": 516,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 462,
									"end": 516,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 462,
									"end": 516,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 462,
									"end": 516,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 462,
									"end": 516,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 462,
									"end": 516,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 462,
									"end": 516,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 462,
									"end": 516,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 462,
									"end": 516,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 462,
									"end": 516,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 494,
									"end": 509,
									"name": "TIMESTAMP",
									"source": 2
								},
								{
									"begin": 486,
									"end": 491,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 486,
									"end": 509,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 486,
									"end": 509,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 486,
									"end": 509,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 486,
									"end": 509,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 149,
									"end": 2301,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 149,
									"end": 2301,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 149,
									"end": 2301,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 149,
									"end": 2301,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 149,
									"end": 2301,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 2301,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 149,
									"end": 2301,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 2301,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 2301,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 149,
									"end": 2301,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 2301,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b6f9419114243f22230b8b4e63ba72cfc047412b555312477c3e748c17f1c40d64736f6c63430008040033",
									".code": [
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "A0B9D8BE"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "D97C94AC"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "D97C94AC"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "DB62B201"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "E608D80B"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "A0B9D8BE"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "BE9A6555"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "C7841DD2"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "CFB9CFBA"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "77441B70"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "77A0FE02"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "27D970"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "143E55E0"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "4455A38F"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "52B73E41"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 149,
											"end": 2301,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 577,
											"end": 638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 577,
											"end": 638,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 577,
											"end": 638,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 577,
											"end": 638,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 638,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 577,
											"end": 638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 638,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 638,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 577,
											"end": 638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 430,
											"end": 455,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 311,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 285,
											"end": 311,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 216,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 192,
											"end": 216,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 248,
											"end": 279,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 577,
											"end": 638,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 577,
											"end": 638,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 430,
											"end": 455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 430,
											"end": 455,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1436,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1122,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1150,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1142,
											"end": 1157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1157,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1436,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1122,
											"end": 1436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1226,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1200,
											"end": 1208,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1209,
											"end": 1210,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1211,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1220,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1182,
											"end": 1220,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1197,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1182,
											"end": 1220,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1182,
											"end": 1220,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1220,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1182,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1226,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1226,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1252,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1182,
											"end": 1252,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1248,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1248,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1248,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1248,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1248,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1248,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1248,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1230,
											"end": 1248,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1248,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1248,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1248,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1230,
											"end": 1248,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1252,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1230,
											"end": 1252,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1252,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1252,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1182,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1426,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1178,
											"end": 1426,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1290,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1300,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1301,
											"end": 1309,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1310,
											"end": 1311,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1338,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1398,
											"end": 1399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1400,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1426,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1178,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1159,
											"end": 1162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1159,
											"end": 1162,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1159,
											"end": 1162,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1159,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1122,
											"end": 1436,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1436,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1122,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1442,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1689,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1661,
											"end": 1689,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1690,
											"end": 1703,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1690,
											"end": 1703,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1730,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1727,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1714,
											"end": 1731,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1731,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1738,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 222,
											"end": 242,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 222,
											"end": 242,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 723,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 795,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 795,
											"end": 806,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 795,
											"end": 806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 816,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 795,
											"end": 816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 795,
											"end": 816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 795,
											"end": 816,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 795,
											"end": 816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 795,
											"end": 816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 845,
											"end": 866,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 830,
											"end": 841,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 830,
											"end": 841,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 830,
											"end": 866,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 826,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 826,
											"end": 984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 882,
											"end": 890,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 896,
											"end": 940,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 940,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 896,
											"end": 940,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 896,
											"end": 940,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 940,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 896,
											"end": 940,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 940,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 896,
											"end": 940,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 904,
											"end": 910,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 896,
											"end": 940,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 940,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 896,
											"end": 940,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 896,
											"end": 940,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 896,
											"end": 940,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 896,
											"end": 940,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 920,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 920,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 920,
											"end": 938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 896,
											"end": 940,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 940,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 896,
											"end": 940,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 896,
											"end": 940,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 896,
											"end": 940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 882,
											"end": 941,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 882,
											"end": 941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 972,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 955,
											"end": 968,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 955,
											"end": 968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 973,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 955,
											"end": 973,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 955,
											"end": 973,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 955,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 955,
											"end": 973,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 955,
											"end": 973,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 955,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 955,
											"end": 973,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 973,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 955,
											"end": 973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 955,
											"end": 973,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 955,
											"end": 973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 955,
											"end": 973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 955,
											"end": 973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 955,
											"end": 973,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 955,
											"end": 973,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 955,
											"end": 973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 826,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 723,
											"end": 990,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 317,
											"end": 345,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 317,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2264,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2140,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2161,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2152,
											"end": 2161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2168,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 1871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1924,
											"end": 1935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1915,
											"end": 1920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1915,
											"end": 1920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1912,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1897,
											"end": 1920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1897,
											"end": 1920,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1897,
											"end": 1920,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1897,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1896,
											"end": 1935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1896,
											"end": 1935,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1935,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1896,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1890,
											"end": 1893,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1890,
											"end": 1935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1890,
											"end": 1935,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1890,
											"end": 1935,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1890,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1970,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 436,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 297,
											"end": 436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 343,
											"end": 348,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 368,
											"end": 388,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 397,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 397,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 397,
											"end": 430,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 397,
											"end": 430,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 397,
											"end": 430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 349,
											"end": 436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 349,
											"end": 436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 349,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 349,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 349,
											"end": 436,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 704,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 442,
											"end": 704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 501,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 552,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 529,
											"end": 536,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 525,
											"end": 548,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 521,
											"end": 553,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 518,
											"end": 520,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 518,
											"end": 520,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 609,
											"end": 610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 679,
											"end": 686,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 659,
											"end": 668,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 655,
											"end": 677,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 634,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 624,
											"end": 687,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 624,
											"end": 687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 580,
											"end": 697,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 508,
											"end": 704,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 508,
											"end": 704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 508,
											"end": 704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 508,
											"end": 704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 508,
											"end": 704,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 778,
											"end": 784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 792,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 835,
											"end": 837,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 832,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 814,
											"end": 821,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 810,
											"end": 833,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 806,
											"end": 838,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 803,
											"end": 805,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 803,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 803,
											"end": 805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 851,
											"end": 852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 841,
											"end": 853,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 803,
											"end": 805,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 803,
											"end": 805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 894,
											"end": 895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 964,
											"end": 971,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 955,
											"end": 961,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 944,
											"end": 953,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 940,
											"end": 962,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 919,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 909,
											"end": 972,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 909,
											"end": 972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 865,
											"end": 982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1092,
											"end": 1099,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1081,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 992,
											"end": 1110,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1123,
											"end": 1385,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1123,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1188,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1233,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1206,
											"end": 1229,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1234,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1351,
											"end": 1357,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1340,
											"end": 1349,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1358,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1509,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1515,
											"end": 1881,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1515,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1742,
											"end": 1744,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1737,
											"end": 1740,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1678,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1678,
											"end": 1745,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1678,
											"end": 1745,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1678,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1745,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1843,
											"end": 1846,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1754,
											"end": 1847,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1754,
											"end": 1847,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1754,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1874,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1875,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1881,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1881,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1881,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1887,
											"end": 2253,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1887,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2032,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2114,
											"end": 2116,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2109,
											"end": 2112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2050,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2117,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2215,
											"end": 2218,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2126,
											"end": 2219,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2219,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2126,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2244,
											"end": 2246,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2239,
											"end": 2242,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2033,
											"end": 2253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2033,
											"end": 2253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2033,
											"end": 2253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2033,
											"end": 2253,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2259,
											"end": 2377,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2259,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2364,
											"end": 2369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2346,
											"end": 2370,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2346,
											"end": 2370,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2346,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2341,
											"end": 2344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 2371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2377,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2383,
											"end": 2501,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2383,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2470,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2470,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2470,
											"end": 2494,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2470,
											"end": 2494,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2470,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2458,
											"end": 2495,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2507,
											"end": 2729,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2507,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2640,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2627,
											"end": 2636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2641,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2615,
											"end": 2641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2615,
											"end": 2641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2719,
											"end": 2720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2717,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2704,
											"end": 2721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2651,
											"end": 2722,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2651,
											"end": 2722,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2651,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2729,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2729,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2729,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2735,
											"end": 3154,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2735,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2905,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2941,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2928,
											"end": 2937,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 2942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 2942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2988,
											"end": 2997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 2986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2978,
											"end": 2998,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 2975,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 2999,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 3142,
											"end": 3146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3016,
											"end": 3147,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3016,
											"end": 3147,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 3016,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3147,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 3154,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 3154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 3154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 3154,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3160,
											"end": 3579,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3160,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3326,
											"end": 3330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3353,
											"end": 3362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3367,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3422,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3403,
											"end": 3423,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3388,
											"end": 3397,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3377,
											"end": 3424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3567,
											"end": 3571,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3441,
											"end": 3572,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3441,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3441,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3433,
											"end": 3572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3433,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3579,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3585,
											"end": 3917,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3585,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3706,
											"end": 3710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3746,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3729,
											"end": 3747,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3825,
											"end": 3826,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3823,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3827,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3801,
											"end": 3807,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3757,
											"end": 3828,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3757,
											"end": 3828,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3757,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3838,
											"end": 3910,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3838,
											"end": 3910,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 3838,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3917,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3917,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3917,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3917,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3917,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3917,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3923,
											"end": 4145,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3923,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4056,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4067,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4135,
											"end": 4136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4133,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4137,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4067,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 4067,
											"end": 4138,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4067,
											"end": 4138,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4067,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4145,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4145,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4151,
											"end": 4320,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4151,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4235,
											"end": 4246,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4275,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4267,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4257,
											"end": 4276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4313,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4304,
											"end": 4307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4300,
											"end": 4314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4285,
											"end": 4314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4285,
											"end": 4314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4320,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4320,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4320,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4320,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4320,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4326,
											"end": 4631,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4326,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 4403,
											"end": 4404,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4385,
											"end": 4405,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4385,
											"end": 4405,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 4385,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4380,
											"end": 4405,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4380,
											"end": 4405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 4437,
											"end": 4438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4419,
											"end": 4439,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4419,
											"end": 4439,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 4419,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4439,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4574,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4505,
											"end": 4571,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4501,
											"end": 4575,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4498,
											"end": 4499,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4576,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 4492,
											"end": 4494,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4494,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 4492,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4624,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4616,
											"end": 4625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4609,
											"end": 4625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4609,
											"end": 4625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4631,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4631,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4631,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4637,
											"end": 4822,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4637,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 4712,
											"end": 4713,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4694,
											"end": 4714,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4694,
											"end": 4714,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 4694,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4689,
											"end": 4714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4689,
											"end": 4714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 4746,
											"end": 4747,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 4728,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4748,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4768,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 4757,
											"end": 4759,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4759,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 4757,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4814,
											"end": 4815,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4811,
											"end": 4812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4807,
											"end": 4816,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4679,
											"end": 4822,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4679,
											"end": 4822,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4679,
											"end": 4822,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4679,
											"end": 4822,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4679,
											"end": 4822,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4828,
											"end": 5019,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4828,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 4872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 4906,
											"end": 4907,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4888,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4888,
											"end": 4908,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4888,
											"end": 4908,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 4888,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 4908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 4908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4922,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 4940,
											"end": 4941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4922,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4922,
											"end": 4942,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4922,
											"end": 4942,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 4922,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4917,
											"end": 4942,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4917,
											"end": 4942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4961,
											"end": 4962,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 4959,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4955,
											"end": 4963,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4952,
											"end": 4954,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4952,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4952,
											"end": 4954,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4952,
											"end": 4954,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4952,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5008,
											"end": 5009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5004,
											"end": 5013,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4996,
											"end": 5013,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4996,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 5019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 5019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 5019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 5019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 5019,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5025,
											"end": 5121,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5025,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5062,
											"end": 5069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5091,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 5109,
											"end": 5114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 5091,
											"end": 5115,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5091,
											"end": 5115,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 5091,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5121,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5127,
											"end": 5245,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 5127,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5238,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5197,
											"end": 5202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5193,
											"end": 5239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5245,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5251,
											"end": 5377,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 5251,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5288,
											"end": 5295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5328,
											"end": 5370,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5321,
											"end": 5326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5317,
											"end": 5371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5377,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5377,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5383,
											"end": 5460,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 5383,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5438,
											"end": 5454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5438,
											"end": 5454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5460,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5466,
											"end": 5699,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5466,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5528,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 5546,
											"end": 5551,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 5528,
											"end": 5552,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5528,
											"end": 5552,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 5528,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5519,
											"end": 5552,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5519,
											"end": 5552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5574,
											"end": 5640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5567,
											"end": 5572,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5564,
											"end": 5641,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5561,
											"end": 5563,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5561,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 5561,
											"end": 5563,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5561,
											"end": 5563,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 5561,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5691,
											"end": 5692,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5684,
											"end": 5689,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5693,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5699,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5705,
											"end": 5885,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 5705,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5753,
											"end": 5830,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5750,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5831,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5850,
											"end": 5854,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5847,
											"end": 5848,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5840,
											"end": 5855,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5878,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5871,
											"end": 5872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5879,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5891,
											"end": 6071,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 5891,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5936,
											"end": 5937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5929,
											"end": 6017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6040,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 6033,
											"end": 6034,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6026,
											"end": 6041,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6060,
											"end": 6064,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6057,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6065,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6302,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6077,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6251,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6213,
											"end": 6214,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6205,
											"end": 6211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6201,
											"end": 6215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6194,
											"end": 6252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6286,
											"end": 6294,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6281,
											"end": 6283,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6273,
											"end": 6279,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6269,
											"end": 6284,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6262,
											"end": 6295,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6302,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6308,
											"end": 6490,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6308,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6448,
											"end": 6482,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6444,
											"end": 6445,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6442,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6425,
											"end": 6483,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6490,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6496,
											"end": 6618,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6496,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6569,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 6587,
											"end": 6592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6569,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6569,
											"end": 6593,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6569,
											"end": 6593,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 6569,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6562,
											"end": 6567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6559,
											"end": 6594,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 6549,
											"end": 6551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6609,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6598,
											"end": 6610,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6551,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 6549,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6539,
											"end": 6618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6539,
											"end": 6618,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6624,
											"end": 6746,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 6624,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 6715,
											"end": 6720,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6690,
											"end": 6695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6687,
											"end": 6722,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6677,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 6677,
											"end": 6679,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6733,
											"end": 6734,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6726,
											"end": 6738,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6677,
											"end": 6679,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 6677,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6746,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6746,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6752,
											"end": 6874,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 6752,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6825,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 6843,
											"end": 6848,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6825,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6825,
											"end": 6849,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6825,
											"end": 6849,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 6825,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6818,
											"end": 6823,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6815,
											"end": 6850,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 6805,
											"end": 6807,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6864,
											"end": 6865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6854,
											"end": 6866,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 6807,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 6805,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6795,
											"end": 6874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6795,
											"end": 6874,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"bond_and_stake(address,uint128)": "52b73e41",
							"claim_staker(address)": "a0b9d8be",
							"era()": "143e55e0",
							"eraDuration()": "4455a38f",
							"owner()": "8da5cb5b",
							"read_current_era()": "e608d80b",
							"read_unbonding_period()": "db62b201",
							"renounceOwnership()": "715018a6",
							"setEraDuration(uint256)": "d97c94ac",
							"stakerRewards()": "cfb9cfba",
							"start()": "be9a6555",
							"transferOwnership(address)": "f2fde38b",
							"unbond_and_unstake(address,uint128)": "c7841dd2",
							"unstakes(uint256)": "77441b70",
							"unstakesSum()": "0027d970",
							"withdraw_unbonded()": "77a0fe02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"bond_and_stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claim_staker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"era\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eraDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"read_current_era\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"read_unbonding_period\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setEraDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakerRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"unbond_and_unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unstakes\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"startEra\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakesSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw_unbonded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"read_current_era()\":{\"returns\":{\"_0\":\"era, The current era\"}},\"read_unbonding_period()\":{\"returns\":{\"_0\":\"period, The unbonding period in eras\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bond_and_stake(address,uint128)\":{\"notice\":\"Stake provided amount on the contract.\"},\"claim_staker(address)\":{\"notice\":\"Claim one era of unclaimed staker rewards for the specifeid contract.         Staker account is derived from the caller address.\"},\"read_current_era()\":{\"notice\":\"Read current era.\"},\"read_unbonding_period()\":{\"notice\":\"Read unbonding period constant.\"},\"unbond_and_unstake(address,uint128)\":{\"notice\":\"Start unbonding process and unstake balance from the contract.\"},\"withdraw_unbonded()\":{\"notice\":\"Withdraw all funds that have completed the unbonding process.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DappsStakingMock.sol\":\"DappsStakingMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/DappsStakingMock.sol\":{\"keccak256\":\"0x873bfff27939fb8a2c47e0eff30ea45f165f8540937bc29424b4588c011202de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2e52c17729d4070a6bac9bd11bb9b98cec1a893f7e4d2b5ee5db39103a4a2ec\",\"dweb:/ipfs/QmZ9qPL3ywdCfK2VLTCkhkJKUyke4L8b69vHhJmL43vQan\"]},\"src/interfaces/DappsStaking.sol\":{\"keccak256\":\"0x347f502ad3b0b6af0e5a9aa4d635b677a2345ce8b23aed0d483b424307c7ca37\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://6ea37bca69d9f12f0076f012bab75779fafa1474cc801a53429940382159c0c0\",\"dweb:/ipfs/QmPGw5t5ksW2v6cLoLuficMzz2DSN274MtL2ugJqeiEwzT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "src/DappsStakingMock.sol:DappsStakingMock",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 143,
								"contract": "src/DappsStakingMock.sol:DappsStakingMock",
								"label": "era",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 145,
								"contract": "src/DappsStakingMock.sol:DappsStakingMock",
								"label": "start",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 148,
								"contract": "src/DappsStakingMock.sol:DappsStakingMock",
								"label": "eraDuration",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 150,
								"contract": "src/DappsStakingMock.sol:DappsStakingMock",
								"label": "unstakesSum",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 152,
								"contract": "src/DappsStakingMock.sol:DappsStakingMock",
								"label": "stakerRewards",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 161,
								"contract": "src/DappsStakingMock.sol:DappsStakingMock",
								"label": "unstakes",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(Unstake)157_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Unstake)157_storage)dyn_storage": {
								"base": "t_struct(Unstake)157_storage",
								"encoding": "dynamic_array",
								"label": "struct DappsStakingMock.Unstake[]",
								"numberOfBytes": "32"
							},
							"t_struct(Unstake)157_storage": {
								"encoding": "inplace",
								"label": "struct DappsStakingMock.Unstake",
								"members": [
									{
										"astId": 154,
										"contract": "src/DappsStakingMock.sol:DappsStakingMock",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 156,
										"contract": "src/DappsStakingMock.sol:DappsStakingMock",
										"label": "startEra",
										"offset": 16,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"bond_and_stake(address,uint128)": {
								"notice": "Stake provided amount on the contract."
							},
							"claim_staker(address)": {
								"notice": "Claim one era of unclaimed staker rewards for the specifeid contract.         Staker account is derived from the caller address."
							},
							"read_current_era()": {
								"notice": "Read current era."
							},
							"read_unbonding_period()": {
								"notice": "Read unbonding period constant."
							},
							"unbond_and_unstake(address,uint128)": {
								"notice": "Start unbonding process and unstake balance from the contract."
							},
							"withdraw_unbonded()": {
								"notice": "Withdraw all funds that have completed the unbonding process."
							}
						},
						"version": 1
					}
				}
			},
			"src/interfaces/DappsStaking.sol": {
				"DappsStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"name": "bond_and_stake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"name": "claim_dapp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claim_staker",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "origin_smart_contract",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "target_smart_contract",
									"type": "address"
								}
							],
							"name": "nomination_transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contract_id",
									"type": "address"
								}
							],
							"name": "read_contract_stake",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "read_current_era",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "era",
									"type": "uint32"
								}
							],
							"name": "read_era_reward",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "era",
									"type": "uint32"
								}
							],
							"name": "read_era_staked",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "staker",
									"type": "bytes"
								}
							],
							"name": "read_staked_amount",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contract_id",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "staker",
									"type": "bytes"
								}
							],
							"name": "read_staked_amount_on_contract",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "read_unbonding_period",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum DappsStaking.RewardDestination",
									"name": "reward_destination",
									"type": "uint8"
								}
							],
							"name": "set_reward_destination",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"name": "unbond_and_unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "smart_contract",
									"type": "address"
								}
							],
							"name": "withdraw_from_unregistered",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw_unbonded",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"nomination_transfer(address,uint128,address)": {
								"params": {
									"amount": "amount to transfer from origin to target",
									"origin_smart_contract": "origin smart contract address",
									"target_smart_contract": "target smart contract address"
								}
							},
							"read_contract_stake(address)": {
								"returns": {
									"_0": "total, The most recent total staked amount on contract"
								}
							},
							"read_current_era()": {
								"returns": {
									"_0": "era, The current era"
								}
							},
							"read_era_reward(uint32)": {
								"returns": {
									"_0": "reward, Total network reward for the given era"
								}
							},
							"read_era_staked(uint32)": {
								"returns": {
									"_0": "staked, Total staked amount for the given era"
								}
							},
							"read_staked_amount(bytes)": {
								"params": {
									"staker": "in form of 20 or 32 hex bytes"
								},
								"returns": {
									"_0": "amount, Staked amount by the staker"
								}
							},
							"read_staked_amount_on_contract(address,bytes)": {
								"params": {
									"contract_id": "contract evm address",
									"staker": "in form of 20 or 32 hex bytes"
								},
								"returns": {
									"_0": "amount, Staked amount by the staker"
								}
							},
							"read_unbonding_period()": {
								"returns": {
									"_0": "period, The unbonding period in eras"
								}
							},
							"set_reward_destination(uint8)": {
								"params": {
									"reward_destination": "instruction on how the reward payout should be handled"
								}
							},
							"withdraw_from_unregistered(address)": {
								"params": {
									"smart_contract": "smart contract address"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"bond_and_stake(address,uint128)": "52b73e41",
							"claim_dapp(address,uint128)": "1b70ba65",
							"claim_staker(address)": "a0b9d8be",
							"nomination_transfer(address,uint128,address)": "2f2000cd",
							"read_contract_stake(address)": "539d5957",
							"read_current_era()": "e608d80b",
							"read_era_reward(uint32)": "d9424b16",
							"read_era_staked(uint32)": "18386693",
							"read_staked_amount(bytes)": "de0e8c64",
							"read_staked_amount_on_contract(address,bytes)": "dd33172d",
							"read_unbonding_period()": "db62b201",
							"register(address)": "4420e486",
							"set_reward_destination(uint8)": "4b1b0e86",
							"unbond_and_unstake(address,uint128)": "c7841dd2",
							"withdraw_from_unregistered(address)": "ba0ab99c",
							"withdraw_unbonded()": "77a0fe02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"bond_and_stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"claim_dapp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claim_staker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"origin_smart_contract\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"target_smart_contract\",\"type\":\"address\"}],\"name\":\"nomination_transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_id\",\"type\":\"address\"}],\"name\":\"read_contract_stake\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"read_current_era\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"era\",\"type\":\"uint32\"}],\"name\":\"read_era_reward\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"era\",\"type\":\"uint32\"}],\"name\":\"read_era_staked\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"staker\",\"type\":\"bytes\"}],\"name\":\"read_staked_amount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_id\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"staker\",\"type\":\"bytes\"}],\"name\":\"read_staked_amount_on_contract\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"read_unbonding_period\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum DappsStaking.RewardDestination\",\"name\":\"reward_destination\",\"type\":\"uint8\"}],\"name\":\"set_reward_destination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"unbond_and_unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smart_contract\",\"type\":\"address\"}],\"name\":\"withdraw_from_unregistered\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw_unbonded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"nomination_transfer(address,uint128,address)\":{\"params\":{\"amount\":\"amount to transfer from origin to target\",\"origin_smart_contract\":\"origin smart contract address\",\"target_smart_contract\":\"target smart contract address\"}},\"read_contract_stake(address)\":{\"returns\":{\"_0\":\"total, The most recent total staked amount on contract\"}},\"read_current_era()\":{\"returns\":{\"_0\":\"era, The current era\"}},\"read_era_reward(uint32)\":{\"returns\":{\"_0\":\"reward, Total network reward for the given era\"}},\"read_era_staked(uint32)\":{\"returns\":{\"_0\":\"staked, Total staked amount for the given era\"}},\"read_staked_amount(bytes)\":{\"params\":{\"staker\":\"in form of 20 or 32 hex bytes\"},\"returns\":{\"_0\":\"amount, Staked amount by the staker\"}},\"read_staked_amount_on_contract(address,bytes)\":{\"params\":{\"contract_id\":\"contract evm address\",\"staker\":\"in form of 20 or 32 hex bytes\"},\"returns\":{\"_0\":\"amount, Staked amount by the staker\"}},\"read_unbonding_period()\":{\"returns\":{\"_0\":\"period, The unbonding period in eras\"}},\"set_reward_destination(uint8)\":{\"params\":{\"reward_destination\":\"instruction on how the reward payout should be handled\"}},\"withdraw_from_unregistered(address)\":{\"params\":{\"smart_contract\":\"smart contract address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bond_and_stake(address,uint128)\":{\"notice\":\"Stake provided amount on the contract.\"},\"claim_dapp(address,uint128)\":{\"notice\":\"Claim one era of unclaimed dapp rewards for the specified contract and era.\"},\"claim_staker(address)\":{\"notice\":\"Claim one era of unclaimed staker rewards for the specifeid contract.         Staker account is derived from the caller address.\"},\"nomination_transfer(address,uint128,address)\":{\"notice\":\"Transfer part or entire nomination from origin smart contract to target smart contract\"},\"read_contract_stake(address)\":{\"notice\":\"Read the staked amount from the era when the amount was last staked/unstaked\"},\"read_current_era()\":{\"notice\":\"Read current era.\"},\"read_era_reward(uint32)\":{\"notice\":\"Read Total network reward for the given era\"},\"read_era_staked(uint32)\":{\"notice\":\"Read Total staked amount for the given era\"},\"read_staked_amount(bytes)\":{\"notice\":\"Read Staked amount for the staker\"},\"read_staked_amount_on_contract(address,bytes)\":{\"notice\":\"Read Staked amount on a given contract for the staker\"},\"read_unbonding_period()\":{\"notice\":\"Read unbonding period constant.\"},\"register(address)\":{\"notice\":\"Register provided contract.\"},\"set_reward_destination(uint8)\":{\"notice\":\"Set reward destination for staker rewards\"},\"unbond_and_unstake(address,uint128)\":{\"notice\":\"Start unbonding process and unstake balance from the contract.\"},\"withdraw_from_unregistered(address)\":{\"notice\":\"Withdraw staked funds from an unregistered contract.\"},\"withdraw_unbonded()\":{\"notice\":\"Withdraw all funds that have completed the unbonding process.\"}},\"notice\":\"Interface to the precompiled contract on Shibuya/Shiden/Astar Predeployed at the address 0x0000000000000000000000000000000000005001\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/DappsStaking.sol\":\"DappsStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/DappsStaking.sol\":{\"keccak256\":\"0x347f502ad3b0b6af0e5a9aa4d635b677a2345ce8b23aed0d483b424307c7ca37\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://6ea37bca69d9f12f0076f012bab75779fafa1474cc801a53429940382159c0c0\",\"dweb:/ipfs/QmPGw5t5ksW2v6cLoLuficMzz2DSN274MtL2ugJqeiEwzT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"bond_and_stake(address,uint128)": {
								"notice": "Stake provided amount on the contract."
							},
							"claim_dapp(address,uint128)": {
								"notice": "Claim one era of unclaimed dapp rewards for the specified contract and era."
							},
							"claim_staker(address)": {
								"notice": "Claim one era of unclaimed staker rewards for the specifeid contract.         Staker account is derived from the caller address."
							},
							"nomination_transfer(address,uint128,address)": {
								"notice": "Transfer part or entire nomination from origin smart contract to target smart contract"
							},
							"read_contract_stake(address)": {
								"notice": "Read the staked amount from the era when the amount was last staked/unstaked"
							},
							"read_current_era()": {
								"notice": "Read current era."
							},
							"read_era_reward(uint32)": {
								"notice": "Read Total network reward for the given era"
							},
							"read_era_staked(uint32)": {
								"notice": "Read Total staked amount for the given era"
							},
							"read_staked_amount(bytes)": {
								"notice": "Read Staked amount for the staker"
							},
							"read_staked_amount_on_contract(address,bytes)": {
								"notice": "Read Staked amount on a given contract for the staker"
							},
							"read_unbonding_period()": {
								"notice": "Read unbonding period constant."
							},
							"register(address)": {
								"notice": "Register provided contract."
							},
							"set_reward_destination(uint8)": {
								"notice": "Set reward destination for staker rewards"
							},
							"unbond_and_unstake(address,uint128)": {
								"notice": "Start unbonding process and unstake balance from the contract."
							},
							"withdraw_from_unregistered(address)": {
								"notice": "Withdraw staked funds from an unregistered contract."
							},
							"withdraw_unbonded()": {
								"notice": "Withdraw all funds that have completed the unbonding process."
							}
						},
						"notice": "Interface to the precompiled contract on Shibuya/Shiden/Astar Predeployed at the address 0x0000000000000000000000000000000000005001",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> src/DappsStakingMock.sol:63:5:\n   |\n63 |     function read_unbonding_period() external view returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2168,
					"file": "src/DappsStakingMock.sol",
					"start": 2077
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"src/DappsStakingMock.sol": {
				"ast": {
					"absolutePath": "src/DappsStakingMock.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"DappsStaking": [
							466
						],
						"DappsStakingMock": [
							342
						],
						"Ownable": [
							112
						]
					},
					"id": 343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "31:22:2"
						},
						{
							"absolutePath": "src/interfaces/DappsStaking.sol",
							"file": "./interfaces/DappsStaking.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 467,
							"src": "55:39:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 113,
							"src": "95:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 139,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "178:7:2"
									},
									"id": 140,
									"nodeType": "InheritanceSpecifier",
									"src": "178:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 342,
							"linearizedBaseContracts": [
								342,
								112,
								134
							],
							"name": "DappsStakingMock",
							"nameLocation": "158:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "143e55e0",
									"id": 143,
									"mutability": "mutable",
									"name": "era",
									"nameLocation": "207:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "192:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 141,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "192:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 142,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "213:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "be9a6555",
									"id": 145,
									"mutability": "mutable",
									"name": "start",
									"nameLocation": "237:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "222:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 144,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "222:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4455a38f",
									"id": 148,
									"mutability": "mutable",
									"name": "eraDuration",
									"nameLocation": "263:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "248:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 146,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "248:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3630",
										"id": 147,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "277:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "60"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0027d970",
									"id": 150,
									"mutability": "mutable",
									"name": "unstakesSum",
									"nameLocation": "300:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "285:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 149,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "285:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cfb9cfba",
									"id": 152,
									"mutability": "mutable",
									"name": "stakerRewards",
									"nameLocation": "332:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "317:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "317:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "DappsStakingMock.Unstake",
									"id": 157,
									"members": [
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "385:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 157,
											"src": "377:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 153,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "377:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "startEra",
											"nameLocation": "409:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 157,
											"src": "401:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 155,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "401:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Unstake",
									"nameLocation": "359:7:2",
									"nodeType": "StructDefinition",
									"scope": 342,
									"src": "352:72:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "77441b70",
									"id": 161,
									"mutability": "mutable",
									"name": "unstakes",
									"nameLocation": "447:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "430:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Unstake_$157_storage_$dyn_storage",
										"typeString": "struct DappsStakingMock.Unstake[]"
									},
									"typeName": {
										"baseType": {
											"id": 159,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 158,
												"name": "Unstake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "430:7:2"
											},
											"referencedDeclaration": 157,
											"src": "430:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Unstake_$157_storage_ptr",
												"typeString": "struct DappsStakingMock.Unstake"
											}
										},
										"id": 160,
										"nodeType": "ArrayTypeName",
										"src": "430:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Unstake_$157_storage_$dyn_storage_ptr",
											"typeString": "struct DappsStakingMock.Unstake[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "476:40:2",
										"statements": [
											{
												"expression": {
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 164,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "486:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 165,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "494:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "494:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "486:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "486:23:2"
											}
										]
									},
									"id": 170,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:2:2"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "476:0:2"
									},
									"scope": 342,
									"src": "462:54:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "636:2:2",
										"statements": []
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "522:50:2",
										"text": "@notice Stake provided amount on the contract."
									},
									"functionSelector": "52b73e41",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bond_and_stake",
									"nameLocation": "586:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "601:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "610:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 174,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:18:2"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:0:2"
									},
									"scope": 342,
									"src": "577:61:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "785:205:2",
										"statements": [
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "unstakesSum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "795:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 188,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "810:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "795:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "795:21:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 191,
														"name": "unstakesSum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "830:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 194,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "853:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DappsStakingMock_$342",
																		"typeString": "contract DappsStakingMock"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DappsStakingMock_$342",
																		"typeString": "contract DappsStakingMock"
																	}
																],
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "845:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 192,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "845:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "845:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "845:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "830:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 216,
												"nodeType": "IfStatement",
												"src": "826:158:2",
												"trueBody": {
													"id": 215,
													"nodeType": "Block",
													"src": "868:116:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 202,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "904:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 205,
																							"name": "read_current_era",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 318,
																							"src": "920:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																								"typeString": "function () view returns (uint256)"
																							}
																						},
																						"id": 206,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "920:18:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 204,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "912:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint128_$",
																						"typeString": "type(uint128)"
																					},
																					"typeName": {
																						"id": 203,
																						"name": "uint128",
																						"nodeType": "ElementaryTypeName",
																						"src": "912:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "912:27:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 201,
																			"name": "Unstake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "896:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Unstake_$157_storage_ptr_$",
																				"typeString": "type(struct DappsStakingMock.Unstake storage pointer)"
																			}
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "896:44:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Unstake_$157_memory_ptr",
																			"typeString": "struct DappsStakingMock.Unstake memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Unstake_$157_memory_ptr",
																			"typeString": "struct DappsStakingMock.Unstake memory"
																		}
																	],
																	"expression": {
																		"id": 198,
																		"name": "unstakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "882:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Unstake_$157_storage_$dyn_storage",
																			"typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
																		}
																	},
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "882:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Unstake_$157_storage_$dyn_storage_ptr_$_t_struct$_Unstake_$157_storage_$returns$__$bound_to$_t_array$_t_struct$_Unstake_$157_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct DappsStakingMock.Unstake storage ref[] storage pointer,struct DappsStakingMock.Unstake storage ref)"
																	}
																},
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "882:59:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 210,
															"nodeType": "ExpressionStatement",
															"src": "882:59:2"
														},
														{
															"expression": {
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 211,
																	"name": "stakerRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "955:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "972:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "955:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 214,
															"nodeType": "ExpressionStatement",
															"src": "955:18:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "644:74:2",
										"text": "@notice Start unbonding process and unstake balance from the contract."
									},
									"functionSelector": "c7841dd2",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unbond_and_unstake",
									"nameLocation": "732:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "751:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "768:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "760:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 183,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:25:2"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "785:0:2"
									},
									"scope": 342,
									"src": "723:267:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "1112:330:2",
										"statements": [
											{
												"body": {
													"id": 276,
													"nodeType": "Block",
													"src": "1164:272:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 232,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "1182:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "1182:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 234,
																					"name": "unstakes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 161,
																					"src": "1200:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Unstake_$157_storage_$dyn_storage",
																						"typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
																					}
																				},
																				"id": 236,
																				"indexExpression": {
																					"id": 235,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 223,
																					"src": "1209:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1200:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Unstake_$157_storage",
																					"typeString": "struct DappsStakingMock.Unstake storage ref"
																				}
																			},
																			"id": 237,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "startEra",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 156,
																			"src": "1200:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "1182:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1224:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "1182:44:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 241,
																				"name": "unstakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 161,
																				"src": "1230:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Unstake_$157_storage_$dyn_storage",
																					"typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
																				}
																			},
																			"id": 243,
																			"indexExpression": {
																				"id": 242,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 223,
																				"src": "1239:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1230:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Unstake_$157_storage",
																				"typeString": "struct DappsStakingMock.Unstake storage ref"
																			}
																		},
																		"id": 244,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 154,
																		"src": "1230:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1251:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1230:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1182:70:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 275,
															"nodeType": "IfStatement",
															"src": "1178:248:2",
															"trueBody": {
																"id": 274,
																"nodeType": "Block",
																"src": "1254:172:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 254,
																							"name": "unstakes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 161,
																							"src": "1301:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Unstake_$157_storage_$dyn_storage",
																								"typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
																							}
																						},
																						"id": 256,
																						"indexExpression": {
																							"id": 255,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 223,
																							"src": "1310:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1301:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Unstake_$157_storage",
																							"typeString": "struct DappsStakingMock.Unstake storage ref"
																						}
																					},
																					"id": 257,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 154,
																					"src": "1301:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 250,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "1280:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 251,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "1280:10:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 249,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1272:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 248,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1272:8:2",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 252,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1272:19:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "1272:28:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1272:48:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 259,
																		"nodeType": "ExpressionStatement",
																		"src": "1272:48:2"
																	},
																	{
																		"expression": {
																			"id": 265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 260,
																				"name": "unstakesSum",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 150,
																				"src": "1338:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 261,
																						"name": "unstakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 161,
																						"src": "1353:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Unstake_$157_storage_$dyn_storage",
																							"typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
																						}
																					},
																					"id": 263,
																					"indexExpression": {
																						"id": 262,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 223,
																						"src": "1362:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1353:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Unstake_$157_storage",
																						"typeString": "struct DappsStakingMock.Unstake storage ref"
																					}
																				},
																				"id": 264,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "1353:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "1338:33:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 266,
																		"nodeType": "ExpressionStatement",
																		"src": "1338:33:2"
																	},
																	{
																		"expression": {
																			"id": 272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 267,
																						"name": "unstakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 161,
																						"src": "1389:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Unstake_$157_storage_$dyn_storage",
																							"typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
																						}
																					},
																					"id": 269,
																					"indexExpression": {
																						"id": 268,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 223,
																						"src": "1398:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1389:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Unstake_$157_storage",
																						"typeString": "struct DappsStakingMock.Unstake storage ref"
																					}
																				},
																				"id": 270,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "1389:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1410:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1389:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"id": 273,
																		"nodeType": "ExpressionStatement",
																		"src": "1389:22:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 225,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "1138:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 226,
															"name": "unstakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1142:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Unstake_$157_storage_$dyn_storage",
																"typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
															}
														},
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1142:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1138:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 277,
												"initializationExpression": {
													"assignments": [
														223
													],
													"declarations": [
														{
															"constant": false,
															"id": 223,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1135:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 277,
															"src": "1127:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 222,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1127:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 224,
													"nodeType": "VariableDeclarationStatement",
													"src": "1127:9:2"
												},
												"loopExpression": {
													"expression": {
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1159:3:2",
														"subExpression": {
															"id": 229,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "1159:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 231,
													"nodeType": "ExpressionStatement",
													"src": "1159:3:2"
												},
												"nodeType": "ForStatement",
												"src": "1122:314:2"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "996:73:2",
										"text": "@notice Withdraw all funds that have completed the unbonding process."
									},
									"functionSelector": "77a0fe02",
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw_unbonded",
									"nameLocation": "1083:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1100:2:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1112:0:2"
									},
									"scope": 342,
									"src": "1074:368:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "1651:87:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 293,
															"name": "stakerRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1690:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 289,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1669:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1669:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1661:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 287,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1661:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1661:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1661:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1661:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "1661:43:2"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 296,
														"name": "stakerRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "1714:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1730:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1714:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "1714:17:2"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "1448:148:2",
										"text": "@notice Claim one era of unclaimed staker rewards for the specifeid contract.\n         Staker account is derived from the caller address."
									},
									"functionSelector": "a0b9d8be",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 285,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 284,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1641:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1641:9:2"
										}
									],
									"name": "claim_staker",
									"nameLocation": "1610:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "1623:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1651:0:2"
									},
									"scope": 342,
									"src": "1601:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "1873:97:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 307,
														"name": "era",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1890:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 308,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1897:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1897:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 310,
																		"name": "start",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "1915:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1897:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 312,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1896:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 313,
															"name": "eraDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1924:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1896:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1890:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 306,
												"id": 316,
												"nodeType": "Return",
												"src": "1883:52:2"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "1744:66:2",
										"text": "@notice Read current era.\n @return era, The current era"
									},
									"functionSelector": "e608d80b",
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "read_current_era",
									"nameLocation": "1824:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1840:2:2"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1864:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1864:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:9:2"
									},
									"scope": 342,
									"src": "1815:155:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "2142:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3130",
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2159:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"functionReturnParameters": 323,
												"id": 325,
												"nodeType": "Return",
												"src": "2152:9:2"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "1976:96:2",
										"text": "@notice Read unbonding period constant.\n @return period, The unbonding period in eras"
									},
									"functionSelector": "db62b201",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "read_unbonding_period",
									"nameLocation": "2086:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2107:2:2"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2133:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:9:2"
									},
									"scope": 342,
									"src": "2077:91:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2224:40:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "eraDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "2234:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2248:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2234:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2234:23:2"
											}
										]
									},
									"functionSelector": "d97c94ac",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setEraDuration",
									"nameLocation": "2183:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "2206:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2198:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2198:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:19:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2224:0:2"
									},
									"scope": 342,
									"src": "2174:90:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "2297:2:2",
										"statements": []
									},
									"id": 341,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2277:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2297:0:2"
									},
									"scope": 342,
									"src": "2270:29:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 343,
							"src": "149:2152:2",
							"usedErrors": []
						}
					],
					"src": "31:2271:2"
				},
				"id": 2
			},
			"src/interfaces/DappsStaking.sol": {
				"ast": {
					"absolutePath": "src/interfaces/DappsStaking.sol",
					"exportedSymbols": {
						"DappsStaking": [
							466
						]
					},
					"id": 467,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 344,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 345,
								"nodeType": "StructuredDocumentation",
								"src": "68:140:3",
								"text": "Interface to the precompiled contract on Shibuya/Shiden/Astar\n Predeployed at the address 0x0000000000000000000000000000000000005001"
							},
							"fullyImplemented": false,
							"id": 466,
							"linearizedBaseContracts": [
								466
							],
							"name": "DappsStaking",
							"nameLocation": "218:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "262:66:3",
										"text": "@notice Read current era.\n @return era, The current era"
									},
									"functionSelector": "e608d80b",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_current_era",
									"nameLocation": "342:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:2:3"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "384:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "384:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:9:3"
									},
									"scope": 466,
									"src": "333:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "399:96:3",
										"text": "@notice Read unbonding period constant.\n @return period, The unbonding period in eras"
									},
									"functionSelector": "db62b201",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_unbonding_period",
									"nameLocation": "509:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "530:2:3"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "556:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:9:3"
									},
									"scope": 466,
									"src": "500:65:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "571:118:3",
										"text": "@notice Read Total network reward for the given era\n @return reward, Total network reward for the given era"
									},
									"functionSelector": "d9424b16",
									"id": 365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_era_reward",
									"nameLocation": "703:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "era",
												"nameLocation": "726:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "719:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 359,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "719:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "718:12:3"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "754:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 362,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "753:9:3"
									},
									"scope": 466,
									"src": "694:69:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "769:116:3",
										"text": "@notice Read Total staked amount for the given era\n @return staked, Total staked amount for the given era"
									},
									"functionSelector": "18386693",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_era_staked",
									"nameLocation": "899:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "era",
												"nameLocation": "922:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "915:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 367,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "915:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:12:3"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "950:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 370,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:9:3"
									},
									"scope": 466,
									"src": "890:69:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "965:149:3",
										"text": "@notice Read Staked amount for the staker\n @param staker in form of 20 or 32 hex bytes\n @return amount, Staked amount by the staker"
									},
									"functionSelector": "de0e8c64",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_staked_amount",
									"nameLocation": "1128:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1162:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1147:21:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1147:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:23:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1193:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 378,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1192:9:3"
									},
									"scope": 466,
									"src": "1119:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "1208:217:3",
										"text": "@notice Read Staked amount on a given contract for the staker\n @param contract_id contract evm address\n @param staker in form of 20 or 32 hex bytes\n @return amount, Staked amount by the staker"
									},
									"functionSelector": "dd33172d",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_staked_amount_on_contract",
									"nameLocation": "1439:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "contract_id",
												"nameLocation": "1478:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1470:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1506:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1491:21:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1491:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1469:44:3"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1537:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 388,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:9:3"
									},
									"scope": 466,
									"src": "1430:116:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "1552:159:3",
										"text": "@notice Read the staked amount from the era when the amount was last staked/unstaked\n @return total, The most recent total staked amount on contract"
									},
									"functionSelector": "539d5957",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "read_contract_stake",
									"nameLocation": "1725:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "contract_id",
												"nameLocation": "1753:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1745:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:21:3"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1789:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 396,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1788:9:3"
									},
									"scope": 466,
									"src": "1716:82:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "1829:39:3",
										"text": "@notice Register provided contract."
									},
									"functionSelector": "4420e486",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nameLocation": "1882:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "1891:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1890:9:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1908:0:3"
									},
									"scope": 466,
									"src": "1873:36:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "1915:50:3",
										"text": "@notice Stake provided amount on the contract."
									},
									"functionSelector": "52b73e41",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bond_and_stake",
									"nameLocation": "1979:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1994:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2003:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 409,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:18:3"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:0:3"
									},
									"scope": 466,
									"src": "1970:59:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2035:74:3",
										"text": "@notice Start unbonding process and unstake balance from the contract."
									},
									"functionSelector": "c7841dd2",
									"id": 421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbond_and_unstake",
									"nameLocation": "2123:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2142:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2151:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 417,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2141:18:3"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2168:0:3"
									},
									"scope": 466,
									"src": "2114:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2175:73:3",
										"text": "@notice Withdraw all funds that have completed the unbonding process."
									},
									"functionSelector": "77a0fe02",
									"id": 425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw_unbonded",
									"nameLocation": "2262:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2279:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2290:0:3"
									},
									"scope": 466,
									"src": "2253:38:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "2297:148:3",
										"text": "@notice Claim one era of unclaimed staker rewards for the specifeid contract.\n         Staker account is derived from the caller address."
									},
									"functionSelector": "a0b9d8be",
									"id": 431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim_staker",
									"nameLocation": "2459:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2472:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2471:9:3"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:3"
									},
									"scope": 466,
									"src": "2450:40:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2496:87:3",
										"text": "@notice Claim one era of unclaimed dapp rewards for the specified contract and era."
									},
									"functionSelector": "1b70ba65",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim_dapp",
									"nameLocation": "2597:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "2608:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2608:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "2617:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 435,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2617:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2607:18:3"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:3"
									},
									"scope": 466,
									"src": "2588:47:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "DappsStaking.RewardDestination",
									"id": 442,
									"members": [
										{
											"id": 440,
											"name": "FreeBalance",
											"nameLocation": "2911:11:3",
											"nodeType": "EnumValue",
											"src": "2911:11:3"
										},
										{
											"id": 441,
											"name": "StakeBalance",
											"nameLocation": "2924:12:3",
											"nodeType": "EnumValue",
											"src": "2924:12:3"
										}
									],
									"name": "RewardDestination",
									"nameLocation": "2892:17:3",
									"nodeType": "EnumDefinition",
									"src": "2887:50:3"
								},
								{
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2943:142:3",
										"text": "@notice Set reward destination for staker rewards\n @param reward_destination instruction on how the reward payout should be handled"
									},
									"functionSelector": "4b1b0e86",
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "set_reward_destination",
									"nameLocation": "3099:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "reward_destination",
												"nameLocation": "3140:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3122:36:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RewardDestination_$442",
													"typeString": "enum DappsStaking.RewardDestination"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "RewardDestination",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 442,
														"src": "3122:17:3"
													},
													"referencedDeclaration": 442,
													"src": "3122:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RewardDestination_$442",
														"typeString": "enum DappsStaking.RewardDestination"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3121:38:3"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3168:0:3"
									},
									"scope": 466,
									"src": "3090:79:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "3179:117:3",
										"text": "@notice Withdraw staked funds from an unregistered contract.\n @param smart_contract smart contract address"
									},
									"functionSelector": "ba0ab99c",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw_from_unregistered",
									"nameLocation": "3310:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "smart_contract",
												"nameLocation": "3345:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "3337:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3336:24:3"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3369:0:3"
									},
									"scope": 466,
									"src": "3301:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "3376:295:3",
										"text": "@notice Transfer part or entire nomination from origin smart contract to target smart contract\n @param origin_smart_contract origin smart contract address\n @param amount amount to transfer from origin to target\n @param target_smart_contract target smart contract address"
									},
									"functionSelector": "2f2000cd",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nomination_transfer",
									"nameLocation": "3685:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "origin_smart_contract",
												"nameLocation": "3713:21:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "3705:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3705:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3744:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "3736:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 459,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "target_smart_contract",
												"nameLocation": "3760:21:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "3752:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3704:78:3"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:3"
									},
									"scope": 466,
									"src": "3676:116:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 467,
							"src": "208:3586:3",
							"usedErrors": []
						}
					],
					"src": "42:3753:3"
				},
				"id": 3
			}
		}
	}
}